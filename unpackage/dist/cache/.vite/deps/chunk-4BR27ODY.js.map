{
  "version": 3,
  "sources": ["browser-external:zlib", "browser-external:fs", "browser-external:http", "browser-external:https", "browser-external:url", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/webpack/universalModuleDefinition", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/webpack/bootstrap", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/pdf.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/display_utils.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/shared/util.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/shared/compatibility.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/shared/is_node.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/api.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/font_loader.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/api_compatibility.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/canvas.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/pattern_helper.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/worker_options.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/shared/message_handler.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/metadata.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/xml_parser.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/transport_stream.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/webgl.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/annotation_layer.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/text_layer.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/svg.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/node_stream.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/network_utils.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/content_disposition.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/network.js", "../../../../../node_modules/pdfjs-dist/build/webpack:/pdfjs-dist/build/pdf/src/display/fetch_stream.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"zlib\" has been externalized for browser compatibility. Cannot access \"zlib.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"http\" has been externalized for browser compatibility. Cannot access \"http.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"https\" has been externalized for browser compatibility. Cannot access \"https.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"url\" has been externalized for browser compatibility. Cannot access \"url.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn ", " \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __w_pdfjs_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__w_pdfjs_require__.m = modules;\n\n \t// expose the module cache\n \t__w_pdfjs_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__w_pdfjs_require__.d = function(exports, name, getter) {\n \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__w_pdfjs_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__w_pdfjs_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __w_pdfjs_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__w_pdfjs_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __w_pdfjs_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__w_pdfjs_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__w_pdfjs_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  isFetchSupported,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { apiCompatibilityParams } from \"./display/api_compatibility.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n  setPDFNetworkStreamFactory(params => {\n    return streamsPromise.then(streams => {\n      const [{ PDFNetworkStream }, { PDFFetchStream }] = streams;\n      if (isFetchSupported() && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  });\n} else if (PDFJSDev.test(\"GENERIC\")) {\n  const { isNodeJS } = require(\"./shared/is_node.js\");\n  if (isNodeJS) {\n    const PDFNodeStream = require(\"./display/node_stream.js\").PDFNodeStream;\n    setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n    let PDFFetchStream;\n    if (isFetchSupported()) {\n      PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n    }\n    setPDFNetworkStreamFactory(params => {\n      if (PDFFetchStream && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n} else if (PDFJSDev.test(\"CHROME\")) {\n  const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n  let PDFFetchStream;\n  const isChromeWithFetchCredentials = function () {\n    // fetch does not include credentials until Chrome 61.0.3138.0 and later.\n    // https://chromium.googlesource.com/chromium/src/+/2e231cf052ca5e68e22baf0008ac9e5e29121707\n    try {\n      // Indexed properties on window are read-only in Chrome 61.0.3151.0+\n      // https://chromium.googlesource.com/chromium/src.git/+/58ab4a971b06dec13e4edf9de8382ca6847f6190\n      window[999] = 123; // should throw. Note: JS strict mode MUST be enabled.\n      delete window[999];\n      return false;\n    } catch (e) {\n      return true;\n    }\n  };\n  if (isFetchSupported() && isChromeWithFetchCredentials()) {\n    PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n  }\n  setPDFNetworkStreamFactory(params => {\n    if (PDFFetchStream && isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./shared/util.js\":\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // From \"./display/api_compatibility.js\":\n  apiCompatibilityParams,\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n};\n", "/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  assert,\n  BaseException,\n  CMapCompressionType,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass DOMCanvasFactory {\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    return {\n      canvas,\n      context,\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n}\n\nclass DOMCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      (isFetchSupported() && isValidFetchUrl(url, document.baseURI))\n    ) {\n      return fetch(url)\n        .then(async response => {\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n          let cMapData;\n          if (this.isCompressed) {\n            cMapData = new Uint8Array(await response.arrayBuffer());\n          } else {\n            cMapData = stringToBytes(await response.text());\n          }\n          return { cMapData, compressionType };\n        })\n        .catch(reason => {\n          throw new Error(\n            `Unable to load ${this.isCompressed ? \"binary \" : \"\"}` +\n              `CMap at: ${url}`\n          );\n        });\n    }\n\n    // The Fetch API is not supported.\n    return new Promise((resolve, reject) => {\n      const request = new XMLHttpRequest();\n      request.open(\"GET\", url, true);\n\n      if (this.isCompressed) {\n        request.responseType = \"arraybuffer\";\n      }\n      request.onreadystatechange = () => {\n        if (request.readyState !== XMLHttpRequest.DONE) {\n          return;\n        }\n        if (request.status === 200 || request.status === 0) {\n          let cMapData;\n          if (this.isCompressed && request.response) {\n            cMapData = new Uint8Array(request.response);\n          } else if (!this.isCompressed && request.responseText) {\n            cMapData = stringToBytes(request.responseText);\n          }\n          if (cMapData) {\n            resolve({ cMapData, compressionType });\n            return;\n          }\n        }\n        reject(new Error(request.statusText));\n      };\n\n      request.send(null);\n    }).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}` +\n          `CMap at: ${url}`\n      );\n    });\n  }\n}\n\nclass DOMSVGFactory {\n  create(width, height) {\n    assert(width > 0 && height > 0, \"Invalid SVG dimensions\");\n\n    const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", width + \"px\");\n    svg.setAttribute(\"height\", height + \"px\");\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n    return svg;\n  }\n\n  createElement(type) {\n    assert(typeof type === \"string\", \"Invalid SVG element type\");\n\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array} viewBox - The xMin, yMin, xMax and yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\n// Gets the file name from a given URL.\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isFetchSupported() {\n  return (\n    typeof fetch !== \"undefined\" &&\n    typeof Response !== \"undefined\" &&\n    \"body\" in Response.prototype &&\n    typeof ReadableStream !== \"undefined\"\n  );\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\nfunction loadScript(src) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = resolve;\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n        \"(\\\\d{4})\" + // Year (required)\n        \"(\\\\d{2})?\" + // Month (optional)\n        \"(\\\\d{2})?\" + // Day (optional)\n        \"(\\\\d{2})?\" + // Hour (optional)\n        \"(\\\\d{2})?\" + // Minute (optional)\n        \"(\\\\d{2})?\" + // Second (optional)\n        \"([Z|+|-])?\" + // Universal time relation (optional)\n        \"(\\\\d{2})?\" + // Offset hour (optional)\n        \"'?\" + // Splitting apostrophe (optional)\n        \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\nexport {\n  PageViewport,\n  RenderingCancelledException,\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  DEFAULT_LINK_REL,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMSVGFactory,\n  StatTimer,\n  isFetchSupported,\n  isValidFetchUrl,\n  loadScript,\n  deprecated,\n  PDFDateString,\n};\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontGetPath: \"errorFontGetPath\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the whitelisted protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {}\n\nclass MissingPDFException extends BaseException {}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {}\n\nconst NullCharactersRegExp = /\\x00/g;\n\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array} arr - the array of the arrays (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n\nclass Util {\n  // makeCssRgb() can be called thousands of times. Using ´rgbBuf` avoids\n  // creating many intermediate strings.\n  static makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join(\"\");\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\n// prettier-ignore\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014,\n  0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C,\n  0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160,\n  0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isEmptyObj(obj) {\n  for (const key in obj) {\n    return false;\n  }\n  return true;\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  return arr1.every(function (element, index) {\n    return element === arr2[index];\n  });\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nconst createObjectURL = (function createObjectURLClosure() {\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  // eslint-disable-next-line no-shadow\n  return function createObjectURL(data, contentType, forceDataSchema = false) {\n    if (!forceDataSchema && URL.createObjectURL) {\n      const blob = new Blob([data], { type: contentType });\n      return URL.createObjectURL(blob);\n    }\n\n    let buffer = `data:${contentType};base64,`;\n    for (let i = 0, ii = data.length; i < ii; i += 3) {\n      const b1 = data[i] & 0xff;\n      const b2 = data[i + 1] & 0xff;\n      const b3 = data[i + 2] & 0xff;\n      const d1 = b1 >> 2,\n        d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n      const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n})();\n\nexport {\n  BaseException,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  OPS,\n  VerbosityLevel,\n  UNSUPPORTED_FEATURES,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  FontType,\n  ImageKind,\n  CMapCompressionType,\n  AbortException,\n  InvalidPDFException,\n  MissingPDFException,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  StreamType,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  Util,\n  FormatError,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  bytesToString,\n  createPromiseCapability,\n  createObjectURL,\n  getVerbosityLevel,\n  info,\n  isArrayBuffer,\n  isArrayEqual,\n  isBool,\n  isEmptyObj,\n  isNum,\n  isString,\n  isSameOrigin,\n  createValidAbsoluteUrl,\n  IsLittleEndianCached,\n  IsEvalSupportedCached,\n  removeNullCharacters,\n  setVerbosityLevel,\n  shadow,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF8String,\n  utf8StringToString,\n  warn,\n  unreachable,\n};\n", "/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport { isNodeJS } from \"./is_node.js\";\n\n// Skip compatibility checks for modern builds and if we already ran the module.\nif (\n  (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"SKIP_BABEL\")) &&\n  (typeof globalThis === \"undefined\" || !globalThis._pdfjsCompatibilityChecked)\n) {\n  // Provides support for globalThis in legacy browsers.\n  // Support: IE11/Edge, Opera\n  if (typeof globalThis === \"undefined\" || globalThis.Math !== Math) {\n    // eslint-disable-next-line no-global-assign\n    globalThis = require(\"core-js/es/global-this\");\n  }\n  globalThis._pdfjsCompatibilityChecked = true;\n\n  const hasDOM = typeof window === \"object\" && typeof document === \"object\";\n  const userAgent =\n    (typeof navigator !== \"undefined\" && navigator.userAgent) || \"\";\n  const isIE = /Trident/.test(userAgent);\n\n  // Support: Node.js\n  (function checkNodeBtoa() {\n    if (globalThis.btoa || !isNodeJS) {\n      return;\n    }\n    globalThis.btoa = function (chars) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(chars, \"binary\").toString(\"base64\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkNodeAtob() {\n    if (globalThis.atob || !isNodeJS) {\n      return;\n    }\n    globalThis.atob = function (input) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(input, \"base64\").toString(\"binary\");\n    };\n  })();\n\n  // Provides support for ChildNode.remove in legacy browsers.\n  // Support: IE.\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== \"undefined\") {\n      return;\n    }\n    Element.prototype.remove = function () {\n      if (this.parentNode) {\n        // eslint-disable-next-line mozilla/avoid-removeChild\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n\n  // Provides support for DOMTokenList.prototype.{add, remove}, with more than\n  // one parameter, in legacy browsers.\n  // Support: IE\n  (function checkDOMTokenListAddRemove() {\n    if (!hasDOM || isNodeJS) {\n      return;\n    }\n    const div = document.createElement(\"div\");\n    div.classList.add(\"testOne\", \"testTwo\");\n\n    if (\n      div.classList.contains(\"testOne\") === true &&\n      div.classList.contains(\"testTwo\") === true\n    ) {\n      return;\n    }\n    const OriginalDOMTokenListAdd = DOMTokenList.prototype.add;\n    const OriginalDOMTokenListRemove = DOMTokenList.prototype.remove;\n\n    DOMTokenList.prototype.add = function (...tokens) {\n      for (const token of tokens) {\n        OriginalDOMTokenListAdd.call(this, token);\n      }\n    };\n    DOMTokenList.prototype.remove = function (...tokens) {\n      for (const token of tokens) {\n        OriginalDOMTokenListRemove.call(this, token);\n      }\n    };\n  })();\n\n  // Provides support for DOMTokenList.prototype.toggle, with the optional\n  // \"force\" parameter, in legacy browsers.\n  // Support: IE\n  (function checkDOMTokenListToggle() {\n    if (!hasDOM || isNodeJS) {\n      return;\n    }\n    const div = document.createElement(\"div\");\n    if (div.classList.toggle(\"test\", 0) === false) {\n      return;\n    }\n\n    DOMTokenList.prototype.toggle = function (token) {\n      const force =\n        arguments.length > 1 ? !!arguments[1] : !this.contains(token);\n      return this[force ? \"add\" : \"remove\"](token), force;\n    };\n  })();\n\n  // Provides support for window.history.{pushState, replaceState}, with the\n  // `url` parameter set to `undefined`, without breaking the document URL.\n  // Support: IE\n  (function checkWindowHistoryPushStateReplaceState() {\n    if (!hasDOM || !isIE) {\n      return;\n    }\n    const OriginalPushState = window.history.pushState;\n    const OriginalReplaceState = window.history.replaceState;\n\n    window.history.pushState = function (state, title, url) {\n      const args = url === undefined ? [state, title] : [state, title, url];\n      OriginalPushState.apply(this, args);\n    };\n    window.history.replaceState = function (state, title, url) {\n      const args = url === undefined ? [state, title] : [state, title, url];\n      OriginalReplaceState.apply(this, args);\n    };\n  })();\n\n  // Provides support for String.prototype.startsWith in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringStartsWith() {\n    if (String.prototype.startsWith) {\n      return;\n    }\n    require(\"core-js/es/string/starts-with.js\");\n  })();\n\n  // Provides support for String.prototype.endsWith in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringEndsWith() {\n    if (String.prototype.endsWith) {\n      return;\n    }\n    require(\"core-js/es/string/ends-with.js\");\n  })();\n\n  // Provides support for String.prototype.includes in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringIncludes() {\n    if (String.prototype.includes) {\n      return;\n    }\n    require(\"core-js/es/string/includes.js\");\n  })();\n\n  // Provides support for Array.prototype.includes in legacy browsers.\n  // Support: IE, Chrome<47\n  (function checkArrayIncludes() {\n    if (Array.prototype.includes) {\n      return;\n    }\n    require(\"core-js/es/array/includes.js\");\n  })();\n\n  // Provides support for Array.from in legacy browsers.\n  // Support: IE\n  (function checkArrayFrom() {\n    if (Array.from) {\n      return;\n    }\n    require(\"core-js/es/array/from.js\");\n  })();\n\n  // Provides support for Object.assign in legacy browsers.\n  // Support: IE\n  (function checkObjectAssign() {\n    if (Object.assign) {\n      return;\n    }\n    require(\"core-js/es/object/assign.js\");\n  })();\n\n  // Provides support for Math.log2 in legacy browsers.\n  // Support: IE, Chrome<38\n  (function checkMathLog2() {\n    if (Math.log2) {\n      return;\n    }\n    Math.log2 = require(\"core-js/es/math/log2.js\");\n  })();\n\n  // Provides support for Number.isNaN in legacy browsers.\n  // Support: IE.\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = require(\"core-js/es/number/is-nan.js\");\n  })();\n\n  // Provides support for Number.isInteger in legacy browsers.\n  // Support: IE, Chrome<34\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = require(\"core-js/es/number/is-integer.js\");\n  })();\n\n  // Provides support for TypedArray.prototype.slice in legacy browsers.\n  // Support: IE\n  (function checkTypedArraySlice() {\n    if (Uint8Array.prototype.slice) {\n      return;\n    }\n    require(\"core-js/es/typed-array/slice\");\n  })();\n\n  // Support: IE, Safari<11, Chrome<63\n  (function checkPromise() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `Promise` shouldn't\n      // need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.Promise && globalThis.Promise.allSettled) {\n      return;\n    }\n    globalThis.Promise = require(\"core-js/es/promise/index.js\");\n  })();\n\n  // Support: IE\n  (function checkURL() {\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n      // Prevent \"require is not a function\" errors in development mode,\n      // since the `URL` constructor should be available in modern browers.\n      return;\n    } else if (!PDFJSDev.test(\"GENERIC\")) {\n      // The `URL` constructor is assumed to be available in the extension\n      // builds.\n      return;\n    } else if (PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders don't use the `URL` constructor, so it\n      // doesn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    globalThis.URL = require(\"core-js/web/url.js\");\n  })();\n\n  // Support: IE, Node.js\n  (function checkReadableStream() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `ReadableStream`\n      // shouldn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    let isReadableStreamSupported = false;\n\n    if (typeof ReadableStream !== \"undefined\") {\n      // MS Edge may say it has ReadableStream but they are not up to spec yet.\n      try {\n        // eslint-disable-next-line no-new\n        new ReadableStream({\n          start(controller) {\n            controller.close();\n          },\n        });\n        isReadableStreamSupported = true;\n      } catch (e) {\n        // The ReadableStream constructor cannot be used.\n      }\n    }\n    if (isReadableStreamSupported) {\n      return;\n    }\n    globalThis.ReadableStream = require(\"web-streams-polyfill/dist/ponyfill.js\").ReadableStream;\n  })();\n\n  // We want to support Map iteration, but it doesn't seem possible to easily\n  // test for that specifically; hence using a similarly unsupported property.\n  // Support: IE11\n  (function checkMapEntries() {\n    if (globalThis.Map && globalThis.Map.prototype.entries) {\n      return;\n    }\n    globalThis.Map = require(\"core-js/es/map/index.js\");\n  })();\n\n  // We want to support Set iteration, but it doesn't seem possible to easily\n  // test for that specifically; hence using a similarly unsupported property.\n  // Support: IE11\n  (function checkSetEntries() {\n    if (globalThis.Set && globalThis.Set.prototype.entries) {\n      return;\n    }\n    globalThis.Set = require(\"core-js/es/set/index.js\");\n  })();\n\n  // Support: IE<11, Safari<8, Chrome<36\n  (function checkWeakMap() {\n    if (globalThis.WeakMap) {\n      return;\n    }\n    globalThis.WeakMap = require(\"core-js/es/weak-map/index.js\");\n  })();\n\n  // Support: IE11\n  (function checkWeakSet() {\n    if (globalThis.WeakSet) {\n      return;\n    }\n    globalThis.WeakSet = require(\"core-js/es/weak-set/index.js\");\n  })();\n\n  // Provides support for String.codePointAt in legacy browsers.\n  // Support: IE11.\n  (function checkStringCodePointAt() {\n    if (String.prototype.codePointAt) {\n      return;\n    }\n    require(\"core-js/es/string/code-point-at.js\");\n  })();\n\n  // Provides support for String.fromCodePoint in legacy browsers.\n  // Support: IE11.\n  (function checkStringFromCodePoint() {\n    if (String.fromCodePoint) {\n      return;\n    }\n    String.fromCodePoint = require(\"core-js/es/string/from-code-point.js\");\n  })();\n\n  // Support: IE\n  (function checkSymbol() {\n    if (globalThis.Symbol) {\n      return;\n    }\n    require(\"core-js/es/symbol/index.js\");\n  })();\n\n  // Provides support for String.prototype.padStart in legacy browsers.\n  // Support: IE, Chrome<57\n  (function checkStringPadStart() {\n    if (String.prototype.padStart) {\n      return;\n    }\n    require(\"core-js/es/string/pad-start.js\");\n  })();\n\n  // Provides support for String.prototype.padEnd in legacy browsers.\n  // Support: IE, Chrome<57\n  (function checkStringPadEnd() {\n    if (String.prototype.padEnd) {\n      return;\n    }\n    require(\"core-js/es/string/pad-end.js\");\n  })();\n\n  // Provides support for Object.values in legacy browsers.\n  // Support: IE, Chrome<54\n  (function checkObjectValues() {\n    if (Object.values) {\n      return;\n    }\n    Object.values = require(\"core-js/es/object/values.js\");\n  })();\n}\n", "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://electronjs.org/docs/api/process#processversionselectron\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !process.versions.electron;\n\nexport { isNodeJS };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport { apiCompatibilityParams } from \"./api_compatibility.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { WebGLContext } from \"./webgl.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string}     [url] - The URL of the PDF.\n * @property {TypedArray|Array|string} [data] - Binary PDF data. Use typed\n *    arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use atob() to convert it to a binary string first.\n * @property {Object}     [httpHeaders] - Basic authentication headers.\n * @property {boolean}    [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is false.\n * @property {string}     [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number}     [length] - The PDF file length. It's used for\n *   progress reports and range requests operations.\n * @property {PDFDataRangeTransport} [range]\n * @property {number}     [rangeChunkSize] - Specify maximum number of bytes\n *   fetched per range request. The default value is 2^16 = 65536.\n * @property {PDFWorker}  [worker] - The worker that will be used for\n *   the loading and parsing of the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document,\n *   used when attempting to recover valid absolute URLs for annotations, and\n *   outline items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined\n *   Adobe CMaps are located. Include trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are\n *   binary packed.\n * @property {Object} [CMapReaderFactory] - The factory that will be\n *   used when reading built-in CMap files. Providing a custom factory is useful\n *   for environments without `XMLHttpRequest` support, such as e.g. Node.js.\n *   The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size\n *   in total pixels, i.e. width * height. Images above this value will not be\n *   rendered. Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can eval\n *   strings as JS. Primarily used to improve performance of font rendering,\n *   and when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are\n *   converted to OpenType fonts and loaded via font face rules. If disabled,\n *   fonts will be rendered using a built-in font renderer that constructs the\n *   glyphs with primitive path commands. The default value is `false`.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [disableRange] - Disable range request loading\n *   of PDF files. When enabled, and if the server supports partial content\n *   requests, then the PDF will be fetched in chunks.\n *   The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file\n *   data. By default PDF.js attempts to load PDFs in chunks.\n *   The default value is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF\n *   file data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *   NOTE: It is also necessary to disable streaming, see above,\n *         in order for disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging\n *   PDF.js (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * @typedef {Object} PDFDocumentStats\n * @property {Object} streamTypes - Used stream types in the document (an item\n *   is set to true if specific stream ID was used in the document).\n * @property {Object} fontTypes - Used font types in the document (an item\n *   is set to true if specific font ID was used in the document).\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n * NOTE: If a URL is used to fetch the PDF data a standard XMLHttpRequest(XHR)\n * is used, which means it must follow the same origin rules that any XHR does\n * e.g. No cross domain requests without CORS.\n *\n * @param {string|TypedArray|DocumentInitParameters|PDFDataRangeTransport} src\n * Can be a url to where a PDF is located, a typed array (Uint8Array)\n * already populated with data or parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\") {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either Uint8Array, string or a parameter object\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    if (key === \"url\" && typeof window !== \"undefined\") {\n      // The full path is required in the 'url' field.\n      params[key] = new URL(source[key], window.location).href;\n      continue;\n    } else if (key === \"range\") {\n      rangeTransport = source[key];\n      continue;\n    } else if (key === \"worker\") {\n      worker = source[key];\n      continue;\n    } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n      // Converting string or array-like data to Uint8Array.\n      const pdfBytes = source[key];\n      if (typeof pdfBytes === \"string\") {\n        params[key] = stringToBytes(pdfBytes);\n      } else if (\n        typeof pdfBytes === \"object\" &&\n        pdfBytes !== null &&\n        !isNaN(pdfBytes.length)\n      ) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else if (isArrayBuffer(pdfBytes)) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else {\n        throw new Error(\n          \"Invalid PDF binary data: either typed array, \" +\n            \"string or array-like object is expected in the \" +\n            \"data property.\"\n        );\n      }\n      continue;\n    }\n    params[key] = source[key];\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory = params.CMapReaderFactory || DOMCMapReaderFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = apiCompatibilityParams.disableFontFace || false;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId Unique document id, used as MessageHandler id.\n * @returns {Promise} The promise, which is resolved when worker id of\n *                    MessageHandler is known.\n * @private\n */\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n  }\n  return worker.messageHandler\n    .sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n    })\n    .then(function (workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n      return workerId;\n    });\n}\n\nconst PDFDocumentLoadingTask = (function PDFDocumentLoadingTaskClosure() {\n  let nextDocumentId = 0;\n\n  /**\n   * The loading task controls the operations required to load a PDF document\n   * (such as network requests) and provides a way to listen for completion,\n   * after which individual pages can be rendered.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFDocumentLoadingTask {\n    constructor() {\n      this._capability = createPromiseCapability();\n      this._transport = null;\n      this._worker = null;\n\n      /**\n       * Unique document loading task id -- used in MessageHandlers.\n       * @type {string}\n       */\n      this.docId = \"d\" + nextDocumentId++;\n\n      /**\n       * Shows if loading task is destroyed.\n       * @type {boolean}\n       */\n      this.destroyed = false;\n\n      /**\n       * Callback to request a password if wrong or no password was provided.\n       * The callback receives two parameters: function that needs to be called\n       * with new password and reason (see {PasswordResponses}).\n       */\n      this.onPassword = null;\n\n      /**\n       * Callback to be able to monitor the loading progress of the PDF file\n       * (necessary to implement e.g. a loading bar). The callback receives\n       * an {Object} with the properties: {number} loaded and {number} total.\n       */\n      this.onProgress = null;\n\n      /**\n       * Callback to when unsupported feature is used. The callback receives\n       * an {UNSUPPORTED_FEATURES} argument.\n       */\n      this.onUnsupportedFeature = null;\n    }\n\n    /**\n     * Promise for document loading task completion.\n     * @type {Promise}\n     */\n    get promise() {\n      return this._capability.promise;\n    }\n\n    /**\n     * Aborts all network requests and destroys worker.\n     * @returns {Promise} A promise that is resolved after destruction activity\n     *                    is completed.\n     */\n    destroy() {\n      this.destroyed = true;\n\n      const transportDestroyed = !this._transport\n        ? Promise.resolve()\n        : this._transport.destroy();\n      return transportDestroyed.then(() => {\n        this._transport = null;\n        if (this._worker) {\n          this._worker.destroy();\n          this._worker = null;\n        }\n      });\n    }\n  }\n  return PDFDocumentLoadingTask;\n})();\n\n/**\n * Abstract class to support range requests file loading.\n * @param {number} length\n * @param {Uint8Array} initialData\n * @param {boolean} progressiveDone\n */\nclass PDFDataRangeTransport {\n  constructor(length, initialData, progressiveDone = false) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a PDFDocument in the worker thread. Also, contains commonly used\n * properties that can be read synchronously.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n  }\n\n  /**\n   * @type {number} Total number of pages the PDF contains.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {string} A (not guaranteed to be) unique ID to identify a PDF.\n   */\n  get fingerprint() {\n    return this._pdfInfo.fingerprint;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise} A promise that is resolved with a {@link PDFPageProxy}\n   *   object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {{num: number, gen: number}} ref - The page reference. Must have\n   *   the `num` and `gen` properties.\n   * @returns {Promise} A promise that is resolved with the page index (starting\n   *   from zero) that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a lookup table for\n   *   mapping named destinations to reference numbers.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise} A promise that is resolved with all information\n   *   of the given named destination.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} containing\n   *   the page labels that correspond to the page indexes, or `null` when\n   *   no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {string} containing\n   *   the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {string} containing\n   *   the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *   the viewer preferences, or `null` when no viewer preferences are present\n   *   in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *   the currently supported actions, or `null` when no OpenAction exists.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  getOpenActionDestination() {\n    deprecated(\"getOpenActionDestination, use getOpenAction instead.\");\n    return this.getOpenAction().then(function (openAction) {\n      return openAction && openAction.dest ? openAction.dest : null;\n    });\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a lookup table for\n   *   mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} of all the\n   *   JavaScript strings in the name tree, or `null` if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} that is a\n   * tree outline (if it has one) of the PDF. The tree is in the format of:\n   * [\n   *   {\n   *     title: string,\n   *     bold: boolean,\n   *     italic: boolean,\n   *     color: rgb Uint8ClampedArray,\n   *     count: integer or undefined,\n   *     dest: dest obj,\n   *     url: string,\n   *     items: array of more items like this\n   *   },\n   *   ...\n   * ]\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} that contains\n   *   the permission flags for the PDF document, or `null` when\n   *   no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} that has\n   *   `info` and `metadata` properties. `info` is an {Object} filled with\n   *   anything available in the information dictionary and similarly\n   *   `metadata` is a {Metadata} object with information from the metadata\n   *   section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {TypedArray} that has\n   *   the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved when the document's data\n   *   is loaded. It is resolved with an {Object} that contains the `length`\n   *   property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @returns {Promise} A promise this is resolved with current statistics about\n   *   document structures (see {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document, on both the main- and\n   * worker-threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   *       currently ongoing since that may lead to rendering errors.\n   *\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup() {\n    return this._transport.startCleanup();\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {Object} A subset of the current {DocumentInitParameters}, which are\n   *   either needed in the viewer and/or whose default values may be affected\n   *   by the `apiCompatibilityParams`.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {array} items - array of {@link TextItem}\n * @property {Object} styles - {@link TextStyle} objects, indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - text content.\n * @property {string} dir - text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {array} transform - transformation matrix.\n * @property {number} width - width in device space.\n * @property {number} height - height in device space.\n * @property {string} fontName - font name used by pdf.js for converted font.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - font ascent.\n * @property {number} descent - font descent.\n * @property {boolean} vertical - text is in vertical mode.\n * @property {string} fontFamily - possible font family\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} intent - Determines the annotations that will be fetched,\n *                    can be either 'display' (viewable annotations) or 'print'\n *                    (printable annotations).\n *                    If the parameter is omitted, all annotations are fetched.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by\n *                          calling the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'\n *                    (default value is 'display').\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering\n *                     for some operations. The default value is `false`.\n * @property {boolean} [renderInteractiveForms] - Whether or not\n *                     interactive form elements are rendered in the display\n *                     layer. If so, we do not render them on canvas as well.\n * @property {Array}  [transform] - Additional transform, applied\n *                    just before viewport transform.\n * @property {Object} [imageLayer] - An object that has beginLayout,\n *                    endLayout and appendImage functions.\n * @property {Object} [canvasFactory] - The factory that will be used\n *                    when creating canvases. The default value is\n *                    {DOMCanvasFactory}.\n * @property {Object} [background] - Background to use for the canvas.\n *                    Can use any valid canvas.fillStyle: A DOMString parsed as\n *                    CSS <color> value, a CanvasGradient object (a linear or\n *                    radial gradient) or a CanvasPattern object (a repetitive\n *                    image). The default value is 'rgb(255,255,255)'.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array} fnArray - Array containing the operator functions.\n * @property {Array} argsArray - Array containing the arguments of the\n *                               functions.\n */\n\n/**\n * Proxy to a PDFPage in the worker thread.\n * @alias PDFPageProxy\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this.intentStates = Object.create(null);\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {Object} The reference that points to this page. It has `num` and\n   *   `gen` properties.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array} An array of the visible portion of the PDF page in user\n   *   space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise} A promise that is resolved with an {Array} of the\n   *   annotation objects.\n   */\n  getAnnotations({ intent = null } = {}) {\n    if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n      this.annotationsPromise = this._transport.getAnnotations(\n        this._pageIndex,\n        intent\n      );\n      this.annotationsIntent = intent;\n    }\n    return this.annotationsPromise;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   * @param {RenderParameters} params Page render parameters.\n   * @returns {RenderTask} An object that contains the promise, which\n   *                       is resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    enableWebGL = false,\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n  }) {\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!this.intentStates[renderingIntent]) {\n      this.intentStates[renderingIntent] = Object.create(null);\n    }\n    const intentState = this.intentStates[renderingIntent];\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance = canvasFactory || new DOMCanvasFactory();\n    const webGLContext = new WebGLContext({\n      enable: enableWebGL,\n    });\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        renderInteractiveForms: renderInteractiveForms === true,\n      });\n    }\n\n    const complete = error => {\n      const i = intentState.renderTasks.indexOf(internalRenderTask);\n      if (i >= 0) {\n        intentState.renderTasks.splice(i, 1);\n      }\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error,\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      webGLContext,\n      useRequestAnimationFrame: renderingIntent !== \"print\",\n      pdfBug: this._pdfBug,\n    });\n\n    if (!intentState.renderTasks) {\n      intentState.renderTasks = [];\n    }\n    intentState.renderTasks.push(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    intentState.displayReadyCapability.promise\n      .then(transparency => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics(transparency);\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @returns {Promise} A promise resolved with an {@link PDFOperatorList}\n   *   object that represents page's operator list.\n   */\n  getOperatorList() {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        const i = intentState.renderTasks.indexOf(opListTask);\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n      }\n    }\n\n    const renderingIntent = \"oplist\";\n    if (!this.intentStates[renderingIntent]) {\n      this.intentStates[renderingIntent] = Object.create(null);\n    }\n    const intentState = this.intentStates[renderingIntent];\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = {};\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      intentState.renderTasks = [];\n      intentState.renderTasks.push(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n      });\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} ReadableStream to read textContent chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise} That is resolved a {@link TextContent}\n   *   object that represent the page text content.\n   */\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    Object.keys(this.intentStates).forEach(intent => {\n      const intentState = this.intentStates[intent];\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intent === \"oplist\") {\n        // Avoid errors below, since the renderTasks are just stubs.\n        return;\n      }\n      intentState.renderTasks.forEach(function (renderTask) {\n        const renderCompleted = renderTask.capability.promise.catch(\n          function () {}\n        ); // ignoring failures\n        waitOn.push(renderCompleted);\n        renderTask.cancel();\n      });\n    });\n    this.objs.clear();\n    this.annotationsPromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicating if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (\n      !this.pendingCleanup ||\n      Object.keys(this.intentStates).some(intent => {\n        const intentState = this.intentStates[intent];\n        return (\n          intentState.renderTasks.length !== 0 ||\n          !intentState.operatorList.lastChunk\n        );\n      })\n    ) {\n      return false;\n    }\n\n    Object.keys(this.intentStates).forEach(intent => {\n      delete this.intentStates[intent];\n    });\n    this.objs.clear();\n    this.annotationsPromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, intent) {\n    const intentState = this.intentStates[intent];\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (let i = 0; i < intentState.renderTasks.length; i++) {\n      intentState.renderTasks[i].operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList(args) {\n    assert(\n      args.intent,\n      'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.'\n    );\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      args\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this.intentStates[args.intent];\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (let i = 0; i < intentState.renderTasks.length; i++) {\n              intentState.renderTasks[i].operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.'\n    );\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.length !== 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(\n      new AbortException(reason && reason.message)\n    );\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    Object.keys(this.intentStates).some(intent => {\n      if (this.intentStates[intent] === intentState) {\n        delete this.intentStates[intent];\n        return true;\n      }\n      return false;\n    });\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor(defer = true) {\n    this._listeners = [];\n    this._defer = defer;\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        const transferable = transfers && transfers.includes(buffer);\n        if (transferable) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      result = Array.isArray(value) ? [] : {};\n      cloned.set(value, result); // adding to cache now for cyclic references\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n            throw new Error(\n              `LoopbackPort.postMessage - cannot clone: ${value[i]}`\n            );\n          }\n          continue;\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    if (!this._defer) {\n      this._listeners.forEach(listener => {\n        listener.call(this, { data: obj });\n      });\n      return;\n    }\n\n    const cloned = new WeakMap();\n    const e = { data: cloneValue(obj) };\n    this._deferred.then(() => {\n      this._listeners.forEach(listener => {\n        listener.call(this, e);\n      });\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort`.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {VerbosityLevel} should be used.\n */\n\nconst PDFWorker = (function PDFWorkerClosure() {\n  const pdfWorkerPorts = new WeakMap();\n  let isWorkerDisabled = false;\n  let fallbackWorkerSrc;\n  let nextFakeWorkerId = 0;\n  let fakeWorkerCapability;\n\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n    // eslint-disable-next-line no-undef\n    if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n      // Workers aren't supported in Node.js, force-disabling them there.\n      isWorkerDisabled = true;\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"LIB\")) {\n        fallbackWorkerSrc = \"../pdf.worker.js\";\n      } else {\n        fallbackWorkerSrc = \"./pdf.worker.js\";\n      }\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath =\n        document.currentScript && document.currentScript.src;\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(\n          /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n          \".worker$1$2\"\n        );\n      }\n    }\n  }\n\n  function getWorkerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  function getMainThreadWorkerMessageHandler() {\n    let mainWorkerMessageHandler;\n    try {\n      mainWorkerMessageHandler =\n        globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;\n    } catch (ex) {\n      /* Ignore errors. */\n    }\n    return mainWorkerMessageHandler || null;\n  }\n\n  // Loads worker code into main thread.\n  function setupFakeWorkerGlobal() {\n    if (fakeWorkerCapability) {\n      return fakeWorkerCapability.promise;\n    }\n    fakeWorkerCapability = createPromiseCapability();\n\n    const loader = async function () {\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        if (typeof SystemJS !== \"object\") {\n          // Manually load SystemJS, since it's only necessary for fake workers.\n          await loadScript(\"../node_modules/systemjs/dist/system.js\");\n          await loadScript(\"../systemjs.config.js\");\n        }\n        const worker = await SystemJS.import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(getWorkerSrc());\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(getWorkerSrc());\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n\n    return fakeWorkerCapability.promise;\n  }\n\n  function createCDNWrapper(url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = \"importScripts('\" + url + \"');\";\n    return URL.createObjectURL(new Blob([wrapper]));\n  }\n\n  /**\n   * PDF.js web worker abstraction, which controls the instantiation of PDF\n   * documents. Message handlers are used to pass information from the main\n   * thread to the worker thread and vice versa. If the creation of a web\n   * worker is not possible, a \"fake\" worker will be used instead.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFWorker {\n    /**\n     * @param {PDFWorkerParameters} params - Worker initialization parameters.\n     */\n    constructor({\n      name = null,\n      port = null,\n      verbosity = getVerbosityLevel(),\n    } = {}) {\n      if (port && pdfWorkerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\n      }\n\n      this.name = name;\n      this.destroyed = false;\n      this.postMessageTransfers = true;\n      this.verbosity = verbosity;\n\n      this._readyCapability = createPromiseCapability();\n      this._port = null;\n      this._webWorker = null;\n      this._messageHandler = null;\n\n      if (port) {\n        pdfWorkerPorts.set(port, this);\n        this._initializeFromPort(port);\n        return;\n      }\n      this._initialize();\n    }\n\n    get promise() {\n      return this._readyCapability.promise;\n    }\n\n    get port() {\n      return this._port;\n    }\n\n    get messageHandler() {\n      return this._messageHandler;\n    }\n\n    _initializeFromPort(port) {\n      this._port = port;\n      this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n      this._messageHandler.on(\"ready\", function () {\n        // Ignoring 'ready' event -- MessageHandler shall be already initialized\n        // and ready to accept the messages.\n      });\n      this._readyCapability.resolve();\n    }\n\n    _initialize() {\n      // If worker support isn't disabled explicit and the browser has worker\n      // support, create a new web worker and test if it/the browser fulfills\n      // all requirements to run parts of pdf.js in a web worker.\n      // Right now, the requirement is, that an Uint8Array is still an\n      // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n      if (\n        typeof Worker !== \"undefined\" &&\n        !isWorkerDisabled &&\n        !getMainThreadWorkerMessageHandler()\n      ) {\n        let workerSrc = getWorkerSrc();\n\n        try {\n          // Wraps workerSrc path into blob URL, if the former does not belong\n          // to the same origin.\n          if (\n            typeof PDFJSDev !== \"undefined\" &&\n            PDFJSDev.test(\"GENERIC\") &&\n            !isSameOrigin(window.location.href, workerSrc)\n          ) {\n            workerSrc = createCDNWrapper(\n              new URL(workerSrc, window.location).href\n            );\n          }\n\n          // Some versions of FF can't create a worker on localhost, see:\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n          const worker = new Worker(workerSrc);\n          const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n          const terminateEarly = () => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            messageHandler.destroy();\n            worker.terminate();\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            } else {\n              // Fall back to fake worker if the termination is caused by an\n              // error (e.g. NetworkError / SecurityError).\n              this._setupFakeWorker();\n            }\n          };\n\n          const onWorkerError = () => {\n            if (!this._webWorker) {\n              // Worker failed to initialize due to an error. Clean up and fall\n              // back to the fake worker.\n              terminateEarly();\n            }\n          };\n          worker.addEventListener(\"error\", onWorkerError);\n\n          messageHandler.on(\"test\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            if (data) {\n              // supportTypedArray\n              this._messageHandler = messageHandler;\n              this._port = worker;\n              this._webWorker = worker;\n              if (!data.supportTransfers) {\n                this.postMessageTransfers = false;\n              }\n              this._readyCapability.resolve();\n              // Send global setting, e.g. verbosity level.\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity,\n              });\n            } else {\n              this._setupFakeWorker();\n              messageHandler.destroy();\n              worker.terminate();\n            }\n          });\n\n          messageHandler.on(\"ready\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            try {\n              sendTest();\n            } catch (e) {\n              // We need fallback to a faked worker.\n              this._setupFakeWorker();\n            }\n          });\n\n          const sendTest = () => {\n            const testObj = new Uint8Array([\n              this.postMessageTransfers ? 255 : 0,\n            ]);\n            // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n            // typed array. Also, checking if we can use transfers.\n            try {\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\n            } catch (ex) {\n              warn(\"Cannot use postMessage transfers.\");\n              testObj[0] = 0;\n              messageHandler.send(\"test\", testObj);\n            }\n          };\n\n          // It might take time for worker to initialize (especially when AMD\n          // loader is used). We will try to send test immediately, and then\n          // when 'ready' message will arrive. The worker shall process only\n          // first received 'test'.\n          sendTest();\n          return;\n        } catch (e) {\n          info(\"The worker has been disabled.\");\n        }\n      }\n      // Either workers are disabled, not supported or have thrown an exception.\n      // Thus, we fallback to a faked worker.\n      this._setupFakeWorker();\n    }\n\n    _setupFakeWorker() {\n      if (!isWorkerDisabled) {\n        warn(\"Setting up fake worker.\");\n        isWorkerDisabled = true;\n      }\n\n      setupFakeWorkerGlobal()\n        .then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            return;\n          }\n          const port = new LoopbackPort();\n          this._port = port;\n\n          // All fake workers use the same port, making id unique.\n          const id = \"fake\" + nextFakeWorkerId++;\n\n          // If the main thread is our worker, setup the handling for the\n          // messages -- the main thread sends to it self.\n          const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n\n          const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n          this._readyCapability.resolve();\n          // Send global setting, e.g. verbosity level.\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity,\n          });\n        })\n        .catch(reason => {\n          this._readyCapability.reject(\n            new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n          );\n        });\n    }\n\n    /**\n     * Destroys the worker instance.\n     */\n    destroy() {\n      this.destroyed = true;\n      if (this._webWorker) {\n        // We need to terminate only web worker created resource.\n        this._webWorker.terminate();\n        this._webWorker = null;\n      }\n      pdfWorkerPorts.delete(this._port);\n      this._port = null;\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n        this._messageHandler = null;\n      }\n    }\n\n    /**\n     * @param {PDFWorkerParameters} params - The worker initialization\n     *                                       parameters.\n     */\n    static fromPort(params) {\n      if (!params || !params.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n      if (pdfWorkerPorts.has(params.port)) {\n        return pdfWorkerPorts.get(params.port);\n      }\n      return new PDFWorker(params);\n    }\n\n    static getWorkerSrc() {\n      return getWorkerSrc();\n    }\n  }\n  return PDFWorker;\n})();\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n    });\n    this._params = params;\n    this.CMapReaderFactory = new params.CMapReaderFactory({\n      baseUrl: params.cMapUrl,\n      isCompressed: params.cMapPacked,\n    });\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    this.pageCache.forEach(function (page) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    });\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n    Promise.all(waitOn).then(() => {\n      this.fontLoader.clear();\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || TESTING\")\n      ) {\n        assert(reason instanceof Error, \"DocException: expected an Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.intent);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (\n            params.pdfBug &&\n            globalThis.FontInspector &&\n            globalThis.FontInspector.enabled\n          ) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"FontType3Res\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (\n            imageData &&\n            \"data\" in imageData &&\n            imageData.data.length > MAX_IMAGE_SIZE_TO_STORE\n          ) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n      if (this.destroyed) {\n        sink.error(new Error(\"Worker was destroyed\"));\n        return;\n      }\n      let fetched = false;\n\n      sink.onPull = () => {\n        if (fetched) {\n          sink.close();\n          return;\n        }\n        fetched = true;\n\n        this.CMapReaderFactory.fetch(data)\n          .then(function (builtInCMap) {\n            sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n          })\n          .catch(function (reason) {\n            sink.error(reason);\n          });\n      };\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler\n      .sendWithPromise(\"GetPageIndex\", {\n        ref,\n      })\n      .catch(function (reason) {\n        return Promise.reject(new Error(reason));\n      });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader\n            ? this._fullReader.filename\n            : null,\n        };\n      });\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  startCleanup() {\n    return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n      for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n        const page = this.pageCache[i];\n        if (page) {\n          const cleanupSuccessful = page.cleanup();\n\n          if (!cleanupSuccessful) {\n            throw new Error(\n              `startCleanup: Page ${i + 1} is currently rendering.`\n            );\n          }\n        }\n      }\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n    });\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      disableFontFace: params.disableFontFace,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj ? obj.resolved : false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n * @alias RenderTask\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nconst InternalRenderTask = (function InternalRenderTaskClosure() {\n  const canvasInRendering = new WeakSet();\n\n  // eslint-disable-next-line no-shadow\n  class InternalRenderTask {\n    constructor({\n      callback,\n      params,\n      objs,\n      commonObjs,\n      operatorList,\n      pageIndex,\n      canvasFactory,\n      webGLContext,\n      useRequestAnimationFrame = false,\n      pdfBug = false,\n    }) {\n      this.callback = callback;\n      this.params = params;\n      this.objs = objs;\n      this.commonObjs = commonObjs;\n      this.operatorListIdx = null;\n      this.operatorList = operatorList;\n      this._pageIndex = pageIndex;\n      this.canvasFactory = canvasFactory;\n      this.webGLContext = webGLContext;\n      this._pdfBug = pdfBug;\n\n      this.running = false;\n      this.graphicsReadyCallback = null;\n      this.graphicsReady = false;\n      this._useRequestAnimationFrame =\n        useRequestAnimationFrame === true && typeof window !== \"undefined\";\n      this.cancelled = false;\n      this.capability = createPromiseCapability();\n      this.task = new RenderTask(this);\n      // caching this-bound methods\n      this._continueBound = this._continue.bind(this);\n      this._scheduleNextBound = this._scheduleNext.bind(this);\n      this._nextBound = this._next.bind(this);\n      this._canvas = params.canvasContext.canvas;\n    }\n\n    initializeGraphics(transparency = false) {\n      if (this.cancelled) {\n        return;\n      }\n      if (this._canvas) {\n        if (canvasInRendering.has(this._canvas)) {\n          throw new Error(\n            \"Cannot use the same canvas during multiple render() operations. \" +\n              \"Use different canvas or ensure previous operations were \" +\n              \"cancelled or completed.\"\n          );\n        }\n        canvasInRendering.add(this._canvas);\n      }\n\n      if (\n        this._pdfBug &&\n        globalThis.StepperManager &&\n        globalThis.StepperManager.enabled\n      ) {\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n      const {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      } = this.params;\n\n      this.gfx = new CanvasGraphics(\n        canvasContext,\n        this.commonObjs,\n        this.objs,\n        this.canvasFactory,\n        this.webGLContext,\n        imageLayer\n      );\n      this.gfx.beginDrawing({\n        transform,\n        viewport,\n        transparency,\n        background,\n      });\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    }\n\n    cancel(error = null) {\n      this.running = false;\n      this.cancelled = true;\n      if (this.gfx) {\n        this.gfx.endDrawing();\n      }\n      if (this._canvas) {\n        canvasInRendering.delete(this._canvas);\n      }\n      this.callback(\n        error ||\n          new RenderingCancelledException(\n            `Rendering cancelled, page ${this._pageIndex + 1}`,\n            \"canvas\"\n          )\n      );\n    }\n\n    operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n      this._continue();\n    }\n\n    _continue() {\n      this.running = true;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.task.onContinue) {\n        this.task.onContinue(this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    }\n\n    _scheduleNext() {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this.cancel.bind(this));\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n      }\n    }\n\n    async _next() {\n      if (this.cancelled) {\n        return;\n      }\n      this.operatorListIdx = this.gfx.executeOperatorList(\n        this.operatorList,\n        this.operatorListIdx,\n        this._continueBound,\n        this.stepper\n      );\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n          this.callback();\n        }\n      }\n    }\n  }\n  return InternalRenderTask;\n})();\n\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  setPDFNetworkStreamFactory,\n  version,\n  build,\n};\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({ docId, onUnsupportedFeature }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n\n    this.nativeFontFaces = [];\n    this.styleElement = null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    this.nativeFontFaces.forEach(function (nativeFontFace) {\n      document.fonts.delete(nativeFontFace);\n    });\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const supported = typeof document !== \"undefined\" && !!document.fonts;\n    return shadow(this, \"isFontLoadingAPISupported\", supported);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(docId) {\n      super(docId);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m && m[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (i = 0, ii = fonts.length; i < ii; i++) {\n        names.push(fonts[i].loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (i = 0, ii = names.length; i < ii; ++i) {\n        const span = document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = names[i];\n        div.appendChild(span);\n      }\n      document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, function () {\n        document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature = null,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(new Uint8Array(this.data));\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds, current;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      if (this._onUnsupportedFeature) {\n        this._onUnsupportedFeature({\n          featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n        });\n      }\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      let args,\n        js = \"\";\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.args !== undefined) {\n          args = current.args.join(\",\");\n        } else {\n          args = \"\";\n        }\n        js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\"c\", \"size\", js));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n", "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  // Support: Node.js\n  (function checkFontFace() {\n    // Node.js is missing native support for `@font-face`.\n    if (isNodeJS) {\n      compatibilityParams.disableFontFace = true;\n    }\n  })();\n}\nconst apiCompatibilityParams = Object.freeze(compatibilityParams);\n\nexport { apiCompatibilityParams };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPatternFromIR, TilingPattern } from \"./pattern_helper.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n\n// Minimal font size that would be used during canvas fillText operations.\nvar MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nvar MAX_FONT_SIZE = 100;\nvar MAX_GROUP_SIZE = 4096;\n\n// Heuristic value used when enforcing minimum line widths.\nvar MIN_WIDTH_FACTOR = 0.65;\n\nvar COMPILE_TYPE3_GLYPHS = true;\nvar MAX_SIZE_TO_COMPILE = 1000;\n\nvar FULL_CHUNK_HEIGHT = 16;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (!ctx.mozCurrentTransform) {\n    ctx._originalSave = ctx.save;\n    ctx._originalRestore = ctx.restore;\n    ctx._originalRotate = ctx.rotate;\n    ctx._originalScale = ctx.scale;\n    ctx._originalTranslate = ctx.translate;\n    ctx._originalTransform = ctx.transform;\n    ctx._originalSetTransform = ctx.setTransform;\n\n    ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n    ctx._transformStack = [];\n\n    Object.defineProperty(ctx, \"mozCurrentTransform\", {\n      get: function getCurrentTransform() {\n        return this._transformMatrix;\n      },\n    });\n\n    Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n      get: function getCurrentTransformInverse() {\n        // Calculation done using WolframAlpha:\n        // http://www.wolframalpha.com/input/?\n        //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n        var m = this._transformMatrix;\n        var a = m[0],\n          b = m[1],\n          c = m[2],\n          d = m[3],\n          e = m[4],\n          f = m[5];\n\n        var ad_bc = a * d - b * c;\n        var bc_ad = b * c - a * d;\n\n        return [\n          d / ad_bc,\n          b / bc_ad,\n          c / bc_ad,\n          a / ad_bc,\n          (d * e - c * f) / bc_ad,\n          (b * e - a * f) / ad_bc,\n        ];\n      },\n    });\n\n    ctx.save = function ctxSave() {\n      var old = this._transformMatrix;\n      this._transformStack.push(old);\n      this._transformMatrix = old.slice(0, 6);\n\n      this._originalSave();\n    };\n\n    ctx.restore = function ctxRestore() {\n      var prev = this._transformStack.pop();\n      if (prev) {\n        this._transformMatrix = prev;\n        this._originalRestore();\n      }\n    };\n\n    ctx.translate = function ctxTranslate(x, y) {\n      var m = this._transformMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n\n      this._originalTranslate(x, y);\n    };\n\n    ctx.scale = function ctxScale(x, y) {\n      var m = this._transformMatrix;\n      m[0] = m[0] * x;\n      m[1] = m[1] * x;\n      m[2] = m[2] * y;\n      m[3] = m[3] * y;\n\n      this._originalScale(x, y);\n    };\n\n    ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * a + m[2] * b,\n        m[1] * a + m[3] * b,\n        m[0] * c + m[2] * d,\n        m[1] * c + m[3] * d,\n        m[0] * e + m[2] * f + m[4],\n        m[1] * e + m[3] * f + m[5],\n      ];\n\n      ctx._originalTransform(a, b, c, d, e, f);\n    };\n\n    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n      this._transformMatrix = [a, b, c, d, e, f];\n\n      ctx._originalSetTransform(a, b, c, d, e, f);\n    };\n\n    ctx.rotate = function ctxRotate(angle) {\n      var cosValue = Math.cos(angle);\n      var sinValue = Math.sin(angle);\n\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * cosValue + m[2] * sinValue,\n        m[1] * cosValue + m[3] * sinValue,\n        m[0] * -sinValue + m[2] * cosValue,\n        m[1] * -sinValue + m[3] * cosValue,\n        m[4],\n        m[5],\n      ];\n\n      this._originalRotate(angle);\n    };\n  }\n}\n\nvar CachedCanvases = (function CachedCanvasesClosure() {\n  // eslint-disable-next-line no-shadow\n  function CachedCanvases(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n  CachedCanvases.prototype = {\n    getCanvas: function CachedCanvases_getCanvas(\n      id,\n      width,\n      height,\n      trackTransform\n    ) {\n      var canvasEntry;\n      if (this.cache[id] !== undefined) {\n        canvasEntry = this.cache[id];\n        this.canvasFactory.reset(canvasEntry, width, height);\n        // reset canvas transform for emulated mozCurrentTransform, if needed\n        canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        canvasEntry = this.canvasFactory.create(width, height);\n        this.cache[id] = canvasEntry;\n      }\n      if (trackTransform) {\n        addContextCurrentTransform(canvasEntry.context);\n      }\n      return canvasEntry;\n    },\n    clear() {\n      for (var id in this.cache) {\n        var canvasEntry = this.cache[id];\n        this.canvasFactory.destroy(canvasEntry);\n        delete this.cache[id];\n      }\n    },\n  };\n  return CachedCanvases;\n})();\n\nfunction compileType3Glyph(imgData) {\n  var POINT_TO_PROCESS_LIMIT = 1000;\n\n  var width = imgData.width,\n    height = imgData.height;\n  var i,\n    j,\n    j0,\n    width1 = width + 1;\n  var points = new Uint8Array(width1 * (height + 1));\n  // prettier-ignore\n  var POINT_TYPES =\n      new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n\n  // decodes bit-packed mask data\n  var lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  var data = new Uint8Array(lineSize * height),\n    pos = 0,\n    ii;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    var mask = 128,\n      elem = data0[i];\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  var count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  var outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    var p = i * width1;\n    var end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    var coords = [p % width1, i];\n\n    var type = points[p],\n      p0 = p,\n      pp;\n    do {\n      var step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1);\n      coords.push((p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  var drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      var o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nvar CanvasExtraState = (function CanvasExtraStateClosure() {\n  // eslint-disable-next-line no-shadow\n  function CanvasExtraState() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n  }\n\n  CanvasExtraState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    },\n    setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    },\n  };\n  return CanvasExtraState;\n})();\n\nvar CanvasGraphics = (function CanvasGraphicsClosure() {\n  // Defines the time the executeOperatorList is going to be executing\n  // before it stops and shedules a continue of execution.\n  var EXECUTION_TIME = 15;\n  // Defines the number of steps before checking the execution time\n  var EXECUTION_STEPS = 10;\n\n  // eslint-disable-next-line no-shadow\n  function CanvasGraphics(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    webGLContext,\n    imageLayer\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.webGLContext = webGLContext;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see pdf\n    // spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  function putBinaryImageData(ctx, imgData) {\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    // Put the image data to the canvas in chunks, rather than putting the\n    // whole image at once.  This saves JS memory, because the ImageData object\n    // is smaller. It also possibly saves C++ memory within the implementation\n    // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n    // the data passed to putImageData()). |n| shouldn't be too small, however,\n    // because too many putImageData() calls will slow things down.\n    //\n    // Note: as written, if the last chunk is partial, the putImageData() call\n    // will (conceptually) put pixels past the bounds of the canvas.  But\n    // that's ok; any such pixels are ignored.\n\n    var height = imgData.height,\n      width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0,\n      destPos;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n    var i, j, thisChunkHeight, elemsInThisChunk;\n\n    // There are multiple forms in which the pixel data can be passed, and\n    // imgData.kind tells us which one this is.\n    if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n      // Grayscale, 1 bit per pixel (i.e. black-and-white).\n      var srcLength = src.byteLength;\n      var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n      var dest32DataLength = dest32.length;\n      var fullSrcDiff = (width + 7) >> 3;\n      var white = 0xffffffff;\n      var black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight =\n          i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n        for (j = 0; j < thisChunkHeight; j++) {\n          var srcDiff = srcLength - srcPos;\n          var k = 0;\n          var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n          var kEndUnrolled = kEnd & ~7;\n          var mask = 0;\n          var srcByte = 0;\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = srcByte & 128 ? white : black;\n            dest32[destPos++] = srcByte & 64 ? white : black;\n            dest32[destPos++] = srcByte & 32 ? white : black;\n            dest32[destPos++] = srcByte & 16 ? white : black;\n            dest32[destPos++] = srcByte & 8 ? white : black;\n            dest32[destPos++] = srcByte & 4 ? white : black;\n            dest32[destPos++] = srcByte & 2 ? white : black;\n            dest32[destPos++] = srcByte & 1 ? white : black;\n          }\n          for (; k < kEnd; k++) {\n            if (mask === 0) {\n              srcByte = src[srcPos++];\n              mask = 128;\n            }\n\n            dest32[destPos++] = srcByte & mask ? white : black;\n            mask >>= 1;\n          }\n        }\n        // We ran out of input. Make all remaining pixels transparent.\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n      // RGBA, 32-bits per pixel.\n\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n    } else if (imgData.kind === ImageKind.RGB_24BPP) {\n      // RGB, 24-bits per pixel.\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n        for (j = elemsInThisChunk; j--; ) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      throw new Error(`bad image kind: ${imgData.kind}`);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    var height = imgData.height,\n      width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n\n    for (var i = 0; i < totalChunks; i++) {\n      var thisChunkHeight =\n        i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n      // Expand the mask so it can be used by the canvas.  Any required\n      // inversion has already been handled.\n      var destPos = 3; // alpha component offset\n      for (var j = 0; j < thisChunkHeight; j++) {\n        var mask = 0;\n        for (var k = 0; k < width; k++) {\n          if (!mask) {\n            var elem = src[srcPos++];\n            mask = 128;\n          }\n          dest[destPos] = elem & mask ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    var properties = [\n      \"strokeStyle\",\n      \"fillStyle\",\n      \"fillRule\",\n      \"globalAlpha\",\n      \"lineWidth\",\n      \"lineCap\",\n      \"lineJoin\",\n      \"miterLimit\",\n      \"globalCompositeOperation\",\n      \"font\",\n    ];\n    for (var i = 0, ii = properties.length; i < ii; i++) {\n      var property = properties[i];\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n    }\n  }\n\n  function resetCtxToDefault(ctx) {\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRule = \"nonzero\";\n    ctx.globalAlpha = 1;\n    ctx.lineWidth = 1;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 10;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.font = \"10px sans-serif\";\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash([]);\n      ctx.lineDashOffset = 0;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    var length = bytes.length;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = bytes[i];\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        var alpha_ = 255 - alpha;\n        bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n        bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n        bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    var scale = 1 / 255;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n      layerData[i] = (layerData[i] * alpha * scale) | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    for (var i = 3; i < length; i += 4) {\n      var y =\n        maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n        maskData[i - 2] * 152 + // * 0.59 ....\n        maskData[i - 1] * 28; // * 0.11 ....\n      layerData[i] = transferMap\n        ? (layerData[i] * transferMap[y >> 8]) >> 8\n        : (layerData[i] * y) >> 16;\n    }\n  }\n\n  function genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    width,\n    height,\n    subtype,\n    backdrop,\n    transferMap\n  ) {\n    var hasBackdrop = !!backdrop;\n    var r0 = hasBackdrop ? backdrop[0] : 0;\n    var g0 = hasBackdrop ? backdrop[1] : 0;\n    var b0 = hasBackdrop ? backdrop[2] : 0;\n\n    var composeFn;\n    if (subtype === \"Luminosity\") {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    // processing image in chunks to save memory\n    var PIXELS_TO_PROCESS = 1048576;\n    var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n    for (var row = 0; row < height; row += chunkSize) {\n      var chunkHeight = Math.min(chunkSize, height - row);\n      var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n      composeFn(maskData.data, layerData.data, transferMap);\n\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx, webGLContext) {\n    var mask = smask.canvas;\n    var maskCtx = smask.context;\n\n    ctx.setTransform(\n      smask.scaleX,\n      0,\n      0,\n      smask.scaleY,\n      smask.offsetX,\n      smask.offsetY\n    );\n\n    var backdrop = smask.backdrop || null;\n    if (!smask.transferMap && webGLContext.isEnabled) {\n      const composed = webGLContext.composeSMask({\n        layer: layerCtx.canvas,\n        mask,\n        properties: {\n          subtype: smask.subtype,\n          backdrop,\n        },\n      });\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n      return;\n    }\n    genericComposeSMask(\n      maskCtx,\n      layerCtx,\n      mask.width,\n      mask.height,\n      smask.subtype,\n      backdrop,\n      smask.transferMap\n    );\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n  var NORMAL_CLIP = {};\n  var EO_CLIP = {};\n\n  CanvasGraphics.prototype = {\n    beginDrawing({\n      transform,\n      viewport,\n      transparency = false,\n      background = null,\n    }) {\n      // For pdfs that use blend modes we have to clear the canvas else certain\n      // blend modes can look wrong since we'd be blending with a white\n      // backdrop. The problem with a transparent backdrop though is we then\n      // don't get sub pixel anti aliasing on text, creating temporary\n      // transparent canvas when we have blend modes.\n      var width = this.ctx.canvas.width;\n      var height = this.ctx.canvas.height;\n\n      this.ctx.save();\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.ctx.restore();\n\n      if (transparency) {\n        var transparentCanvas = this.cachedCanvases.getCanvas(\n          \"transparent\",\n          width,\n          height,\n          true\n        );\n        this.compositeCtx = this.ctx;\n        this.transparentCanvas = transparentCanvas.canvas;\n        this.ctx = transparentCanvas.context;\n        this.ctx.save();\n        // The transform can be applied before rendering, transferring it to\n        // the new canvas.\n        this.ctx.transform.apply(\n          this.ctx,\n          this.compositeCtx.mozCurrentTransform\n        );\n      }\n\n      this.ctx.save();\n      resetCtxToDefault(this.ctx);\n      if (transform) {\n        this.ctx.transform.apply(this.ctx, transform);\n      }\n      this.ctx.transform.apply(this.ctx, viewport.transform);\n\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    },\n\n    executeOperatorList: function CanvasGraphics_executeOperatorList(\n      operatorList,\n      executionStartIdx,\n      continueCallback,\n      stepper\n    ) {\n      var argsArray = operatorList.argsArray;\n      var fnArray = operatorList.fnArray;\n      var i = executionStartIdx || 0;\n      var argsArrayLen = argsArray.length;\n\n      // Sometimes the OperatorList to execute is empty.\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      var chunkOperations =\n        argsArrayLen - i > EXECUTION_STEPS &&\n        typeof continueCallback === \"function\";\n      var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      var steps = 0;\n\n      var commonObjs = this.commonObjs;\n      var objs = this.objs;\n      var fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          for (const depObjId of argsArray[i]) {\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n            // If the promise isn't resolved yet, add the continueCallback\n            // to the promise and bail out.\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        // If the entire operatorList was executed, stop as were done.\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        // If the execution took longer then a certain amount of time and\n        // `continueCallback` is specified, interrupt the execution.\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n          steps = 0;\n        }\n\n        // If the operatorList isn't executed completely yet OR the execution\n        // time was short enough, do another execution round.\n      }\n    },\n\n    endDrawing: function CanvasGraphics_endDrawing() {\n      // Finishing all opened operations such as SMask group painting.\n      if (this.current.activeSMask !== null) {\n        this.endSMaskGroup();\n      }\n\n      this.ctx.restore();\n\n      if (this.transparentCanvas) {\n        this.ctx = this.compositeCtx;\n        this.ctx.save();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\n        this.ctx.restore();\n        this.transparentCanvas = null;\n      }\n\n      this.cachedCanvases.clear();\n      this.webGLContext.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    },\n\n    // Graphics state\n    setLineWidth: function CanvasGraphics_setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    },\n    setLineCap: function CanvasGraphics_setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    },\n    setLineJoin: function CanvasGraphics_setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    },\n    setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    },\n    setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n      var ctx = this.ctx;\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      }\n    },\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setGState: function CanvasGraphics_setGState(states) {\n      for (var i = 0, ii = states.length; i < ii; i++) {\n        var state = states[i];\n        var key = state[0];\n        var value = state[1];\n\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value[0], value[1]);\n            break;\n          case \"CA\":\n            this.current.strokeAlpha = state[1];\n            break;\n          case \"ca\":\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n          case \"BM\":\n            this.ctx.globalCompositeOperation = value;\n            break;\n          case \"SMask\":\n            if (this.current.activeSMask) {\n              // If SMask is currrenly used, it needs to be suspended or\n              // finished. Suspend only makes sense when at least one save()\n              // was performed and state needs to be reverted on restore().\n              if (\n                this.stateStack.length > 0 &&\n                this.stateStack[this.stateStack.length - 1].activeSMask ===\n                  this.current.activeSMask\n              ) {\n                this.suspendSMaskGroup();\n              } else {\n                this.endSMaskGroup();\n              }\n            }\n            this.current.activeSMask = value ? this.tempSMask : null;\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n            this.tempSMask = null;\n            break;\n        }\n      }\n    },\n    beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n      var activeSMask = this.current.activeSMask;\n      var drawnWidth = activeSMask.canvas.width;\n      var drawnHeight = activeSMask.canvas.height;\n      var cacheId = \"smaskGroupAt\" + this.groupLevel;\n      var scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n\n      var currentCtx = this.ctx;\n      var currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n\n      var groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Similar to endSMaskGroup, the intermediate canvas has to be composed\n      // and future ctx state restored.\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      this.ctx.save(); // save is needed since SMask will be resumed.\n      copyCtxState(groupCtx, this.ctx);\n\n      // Saving state for resuming.\n      this.current.resumeSMaskCtx = groupCtx;\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      var deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n\n      // SMask was composed, the results at the groupCtx can be cleared.\n      groupCtx.save();\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n      groupCtx.restore();\n    },\n    resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Resuming state saved by suspendSMaskGroup. We don't need to restore\n      // any groupCtx state since restore() command (the only caller) will do\n      // that for us. See also beginSMaskGroup.\n      var groupCtx = this.current.resumeSMaskCtx;\n      var currentCtx = this.ctx;\n      this.ctx = groupCtx;\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      copyCtxState(groupCtx, this.ctx);\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      var deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n    },\n    save: function CanvasGraphics_save() {\n      this.ctx.save();\n      var old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.resumeSMaskCtx = null;\n    },\n    restore: function CanvasGraphics_restore() {\n      // SMask was suspended, we just need to resume it.\n      if (this.current.resumeSMaskCtx) {\n        this.resumeSMaskGroup();\n      }\n      // SMask has to be finished once there is no states that are using the\n      // same SMask.\n      if (\n        this.current.activeSMask !== null &&\n        (this.stateStack.length === 0 ||\n          this.stateStack[this.stateStack.length - 1].activeSMask !==\n            this.current.activeSMask)\n      ) {\n        this.endSMaskGroup();\n      }\n\n      if (this.stateStack.length !== 0) {\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n\n        // Ensure that the clipping path is reset (fixes issue6413.pdf).\n        this.pendingClip = null;\n\n        this._cachedGetSinglePixelWidth = null;\n      }\n    },\n    transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n\n      this._cachedGetSinglePixelWidth = null;\n    },\n\n    // Path\n    constructPath: function CanvasGraphics_constructPath(ops, args) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var x = current.x,\n        y = current.y;\n      for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            var width = args[j++];\n            var height = args[j++];\n            if (width === 0) {\n              width = this.getSinglePixelWidth();\n            }\n            if (height === 0) {\n              height = this.getSinglePixelWidth();\n            }\n            var xw = x + width;\n            var yh = y + height;\n            this.ctx.moveTo(x, y);\n            this.ctx.lineTo(xw, y);\n            this.ctx.lineTo(xw, yh);\n            this.ctx.lineTo(x, yh);\n            this.ctx.lineTo(x, y);\n            this.ctx.closePath();\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3],\n              x,\n              y\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            ctx.bezierCurveTo(\n              x,\n              y,\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3]\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n          case OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n      current.setCurrentPoint(x, y);\n    },\n    closePath: function CanvasGraphics_closePath() {\n      this.ctx.closePath();\n    },\n    stroke: function CanvasGraphics_stroke(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var strokeColor = this.current.strokeColor;\n      // For stroke we want to temporarily change the global alpha to the\n      // stroking alpha.\n      ctx.globalAlpha = this.current.strokeAlpha;\n      if (\n        strokeColor &&\n        strokeColor.hasOwnProperty(\"type\") &&\n        strokeColor.type === \"Pattern\"\n      ) {\n        // for patterns, we transform to pattern space, calculate\n        // the pattern, call stroke, and restore to user space\n        ctx.save();\n        // The current transform will be replaced while building the pattern,\n        // but the line width needs to be adjusted by the current transform, so\n        // we must scale it. To properly fix this we should be using a pattern\n        // transform instead (see #10955).\n        const transform = ctx.mozCurrentTransform;\n        const scale = Util.singularValueDecompose2dScale(transform)[0];\n        ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n        ctx.lineWidth = Math.max(\n          this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n          this.current.lineWidth * scale\n        );\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        // Prevent drawing too thin lines by enforcing a minimum line width.\n        ctx.lineWidth = Math.max(\n          this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n          this.current.lineWidth\n        );\n        ctx.stroke();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n      // Restore the global alpha to the fill alpha\n      ctx.globalAlpha = this.current.fillAlpha;\n    },\n    closeStroke: function CanvasGraphics_closeStroke() {\n      this.closePath();\n      this.stroke();\n    },\n    fill: function CanvasGraphics_fill(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      var needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n        if (this.baseTransform) {\n          ctx.setTransform.apply(ctx, this.baseTransform);\n        }\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n    },\n    eoFill: function CanvasGraphics_eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    },\n    fillStroke: function CanvasGraphics_fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n\n      this.consumePath();\n    },\n    eoFillStroke: function CanvasGraphics_eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    },\n    closeFillStroke: function CanvasGraphics_closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    },\n    closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    },\n    endPath: function CanvasGraphics_endPath() {\n      this.consumePath();\n    },\n\n    // Clipping\n    clip: function CanvasGraphics_clip() {\n      this.pendingClip = NORMAL_CLIP;\n    },\n    eoClip: function CanvasGraphics_eoClip() {\n      this.pendingClip = EO_CLIP;\n    },\n\n    // Text\n    beginText: function CanvasGraphics_beginText() {\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    endText: function CanvasGraphics_endText() {\n      var paths = this.pendingTextPaths;\n      var ctx = this.ctx;\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      for (var i = 0; i < paths.length; i++) {\n        var path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    },\n    setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    },\n    setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    },\n    setHScale: function CanvasGraphics_setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    },\n    setLeading: function CanvasGraphics_setLeading(leading) {\n      this.current.leading = -leading;\n    },\n    setFont: function CanvasGraphics_setFont(fontRefName, size) {\n      var fontObj = this.commonObjs.get(fontRefName);\n      var current = this.current;\n\n      if (!fontObj) {\n        throw new Error(`Can't find font for ${fontRefName}`);\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      // A valid matrix needs all main diagonal elements to be non-zero\n      // This also ensures we bypass FF bugzilla bug #719844.\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n        warn(\"Invalid font matrix for font \" + fontRefName);\n      }\n\n      // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n      // and in some docs this can be negative (inverted x-y axes).\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return; // we don't need ctx.font for Type3 fonts\n      }\n\n      var name = fontObj.loadedName || \"sans-serif\";\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      var italic = fontObj.italic ? \"italic\" : \"normal\";\n      var typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n      // Some font backends cannot handle fonts below certain size.\n      // Keeping the font at minimal size and using the fontSizeScale to change\n      // the current transformation matrix before the fillText/strokeText.\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n      let browserFontSize = size;\n      if (size < MIN_FONT_SIZE) {\n        browserFontSize = MIN_FONT_SIZE;\n      } else if (size > MAX_FONT_SIZE) {\n        browserFontSize = MAX_FONT_SIZE;\n      }\n      this.current.fontSizeScale = size / browserFontSize;\n\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n    },\n    setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    },\n    setTextRise: function CanvasGraphics_setTextRise(rise) {\n      this.current.textRise = rise;\n    },\n    moveText: function CanvasGraphics_moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    },\n    setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    },\n    setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    nextLine: function CanvasGraphics_nextLine() {\n      this.moveText(0, this.current.leading);\n    },\n\n    paintChar(character, x, y, patternTransform) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var textRenderingMode = current.textRenderingMode;\n      var fontSize = current.fontSize / current.fontSizeScale;\n      var fillStrokeMode =\n        textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      var isAddToPathSet = !!(\n        textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n      );\n      const patternFill = current.patternFill && !font.missingFile;\n\n      var addToPath;\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace || patternFill) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n        if (patternTransform) {\n          ctx.setTransform.apply(ctx, patternTransform);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fill();\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.stroke();\n        }\n        ctx.restore();\n      } else {\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fillText(character, x, y);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.strokeText(character, x, y);\n        }\n      }\n\n      if (isAddToPathSet) {\n        var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x,\n          y,\n          fontSize,\n          addToPath,\n        });\n      }\n    },\n\n    get isFontSubpixelAAEnabled() {\n      // Checks if anti-aliasing is enabled when scaled text is painted.\n      // On Windows GDI scaled fonts looks bad.\n      const { context: ctx } = this.cachedCanvases.getCanvas(\n        \"isFontSubpixelAAEnabled\",\n        10,\n        10\n      );\n      ctx.scale(1.5, 1);\n      ctx.fillText(\"I\", 0, 10);\n      var data = ctx.getImageData(0, 0, 10, 10).data;\n      var enabled = false;\n      for (var i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n      return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n    },\n\n    showText: function CanvasGraphics_showText(glyphs) {\n      var current = this.current;\n      var font = current.font;\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      var fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return undefined;\n      }\n\n      var ctx = this.ctx;\n      var fontSizeScale = current.fontSizeScale;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var fontDirection = current.fontDirection;\n      var textHScale = current.textHScale * fontDirection;\n      var glyphsLength = glyphs.length;\n      var vertical = font.vertical;\n      var spacingDir = vertical ? 1 : -1;\n      var defaultVMetrics = font.defaultVMetrics;\n      var widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      var simpleFillText =\n        current.textRenderingMode === TextRenderingMode.FILL &&\n        !font.disableFontFace &&\n        !current.patternFill;\n\n      ctx.save();\n      let patternTransform;\n      if (current.patternFill) {\n        // TODO: Patterns are not applied correctly to text if a non-embedded\n        // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n        ctx.save();\n        const pattern = current.fillColor.getPattern(ctx, this);\n        patternTransform = ctx.mozCurrentTransform;\n        ctx.restore();\n        ctx.fillStyle = pattern;\n      }\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      var lineWidth = current.lineWidth;\n      var scale = current.textMatrixScale;\n      if (scale === 0 || lineWidth === 0) {\n        var fillStrokeMode =\n          current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          this._cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n\n      var x = 0,\n        i;\n      for (i = 0; i < glyphsLength; ++i) {\n        var glyph = glyphs[i];\n        if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        var restoreNeeded = false;\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var character = glyph.fontChar;\n        var accent = glyph.accent;\n        var scaledX, scaledY, scaledAccentX, scaledAccentY;\n        var width = glyph.width;\n        if (vertical) {\n          var vmetric, vx, vy;\n          vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0) {\n          // Some standard fonts may not have the exact width: rescale per\n          // character if measured width is greater than expected glyph width\n          // and subpixel-aa is enabled, otherwise just center the glyph.\n          var measuredWidth =\n            ((ctx.measureText(character).width * 1000) / fontSize) *\n            fontSizeScale;\n          if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n            var characterScaleX = width / measuredWidth;\n            restoreNeeded = true;\n            ctx.save();\n            ctx.scale(characterScaleX, 1);\n            scaledX /= characterScaleX;\n          } else if (width !== measuredWidth) {\n            scaledX +=\n              (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n          }\n        }\n\n        // Only attempt to draw the glyph if it is actually in the embedded font\n        // file or if there isn't a font file so the fallback font is shown.\n        if (glyph.isInFont || font.missingFile) {\n          if (simpleFillText && !accent) {\n            // common case\n            ctx.fillText(character, scaledX, scaledY);\n          } else {\n            this.paintChar(character, scaledX, scaledY, patternTransform);\n            if (accent) {\n              scaledAccentX = scaledX + accent.offset.x / fontSizeScale;\n              scaledAccentY = scaledY - accent.offset.y / fontSizeScale;\n              this.paintChar(\n                accent.fontChar,\n                scaledAccentX,\n                scaledAccentY,\n                patternTransform\n              );\n            }\n          }\n        }\n\n        var charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n      ctx.restore();\n    },\n\n    showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n      // Type3 fonts - each glyph is a \"mini-PDF\"\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var fontSize = current.fontSize;\n      var fontDirection = current.fontDirection;\n      var spacingDir = font.vertical ? 1 : -1;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var textHScale = current.textHScale * fontDirection;\n      var fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n      var glyphsLength = glyphs.length;\n      var isTextInvisible =\n        current.textRenderingMode === TextRenderingMode.INVISIBLE;\n      var i, glyph, width, spacingLength;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n      this._cachedGetSinglePixelWidth = null;\n\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n        if (isNum(glyph)) {\n          spacingLength = (spacingDir * glyph * fontSize) / 1000;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var operatorList = font.charProcOperatorList[glyph.operatorListId];\n        if (!operatorList) {\n          warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n          continue;\n        }\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n\n        var transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n        width = transformed[0] * fontSize + spacing;\n\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n      ctx.restore();\n      this.processingType3 = null;\n    },\n\n    // Type3 fonts\n    setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {\n      // We can safely ignore this since the width should be the same\n      // as the width in the Widths array.\n    },\n    setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(\n      xWidth,\n      yWidth,\n      llx,\n      lly,\n      urx,\n      ury\n    ) {\n      // TODO According to the spec we're also suppose to ignore any operators\n      // that set color or include images while processing this type3 font.\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    },\n\n    // Color\n    getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n      var pattern;\n      if (IR[0] === \"TilingPattern\") {\n        var color = IR[1];\n        var baseTransform =\n          this.baseTransform || this.ctx.mozCurrentTransform.slice();\n        var canvasGraphicsFactory = {\n          createCanvasGraphics: ctx => {\n            return new CanvasGraphics(\n              ctx,\n              this.commonObjs,\n              this.objs,\n              this.canvasFactory,\n              this.webGLContext\n            );\n          },\n        };\n        pattern = new TilingPattern(\n          IR,\n          color,\n          this.ctx,\n          canvasGraphicsFactory,\n          baseTransform\n        );\n      } else {\n        pattern = getShadingPatternFromIR(IR);\n      }\n      return pattern;\n    },\n    setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    },\n    setFillColorN: function CanvasGraphics_setFillColorN() {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    },\n    setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    },\n\n    shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n      var ctx = this.ctx;\n\n      this.save();\n      var pattern = getShadingPatternFromIR(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\n\n      var inv = ctx.mozCurrentTransformInverse;\n      if (inv) {\n        var canvas = ctx.canvas;\n        var width = canvas.width;\n        var height = canvas.height;\n\n        var bl = Util.applyTransform([0, 0], inv);\n        var br = Util.applyTransform([0, height], inv);\n        var ul = Util.applyTransform([width, 0], inv);\n        var ur = Util.applyTransform([width, height], inv);\n\n        var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        // HACK to draw the gradient onto an infinite rectangle.\n        // PDF gradients are drawn across the entire image while\n        // Canvas only allows gradients to be drawn in a rectangle\n        // The following bug should allow us to remove this.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    },\n\n    // Images\n    beginInlineImage: function CanvasGraphics_beginInlineImage() {\n      unreachable(\"Should not call beginInlineImage\");\n    },\n    beginImageData: function CanvasGraphics_beginImageData() {\n      unreachable(\"Should not call beginImageData\");\n    },\n\n    paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(\n      matrix,\n      bbox\n    ) {\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox) {\n        var width = bbox[2] - bbox[0];\n        var height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    },\n\n    paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    },\n\n    beginGroup: function CanvasGraphics_beginGroup(group) {\n      this.save();\n      var currentCtx = this.ctx;\n      // TODO non-isolated groups - according to Rik at adobe non-isolated\n      // group results aren't usually that different and they even have tools\n      // that ignore this setting. Notes from Rik on implementing:\n      // - When you encounter an transparency group, create a new canvas with\n      // the dimensions of the bbox\n      // - copy the content from the previous canvas to the new canvas\n      // - draw as usual\n      // - remove the backdrop alpha:\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\n      // backdrop\n      // - remove background color:\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n      if (!group.isolated) {\n        info(\"TODO: Support non-isolated groups.\");\n      }\n\n      // TODO knockout - supposedly possible with the clever use of compositing\n      // modes.\n      if (group.knockout) {\n        warn(\"Knockout groups not supported.\");\n      }\n\n      var currentTransform = currentCtx.mozCurrentTransform;\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n      if (!group.bbox) {\n        throw new Error(\"Bounding box is required.\");\n      }\n\n      // Based on the current transform figure out how big the bounding box\n      // will actually be.\n      var bounds = Util.getAxialAlignedBoundingBox(\n        group.bbox,\n        currentCtx.mozCurrentTransform\n      );\n      // Clip the bounding box to the current canvas.\n      var canvasBounds = [\n        0,\n        0,\n        currentCtx.canvas.width,\n        currentCtx.canvas.height,\n      ];\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      // Use ceil in case we're between sizes so we don't create canvas that is\n      // too small and make the canvas at least 1x1 pixels.\n      var offsetX = Math.floor(bounds[0]);\n      var offsetY = Math.floor(bounds[1]);\n      var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      var scaleX = 1,\n        scaleY = 1;\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      var cacheId = \"groupAt\" + this.groupLevel;\n      if (group.smask) {\n        // Using two cache entries is case if masks are used one after another.\n        cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n      }\n      var scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n      var groupCtx = scratchCanvas.context;\n\n      // Since we created a new canvas that is just the size of the bounding box\n      // we have to translate the group ctx.\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        // Saving state and cached mask to be used in setGState.\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX,\n          offsetY,\n          scaleX,\n          scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop,\n          transferMap: group.smask.transferMap || null,\n          startTransformInverse: null, // used during suspend operation\n        });\n      } else {\n        // Setup the current ctx so when the group is popped we draw it at the\n        // right location.\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n      // The transparency group inherits all off the current graphics state\n      // except the blend mode, soft mask, and alpha constants.\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n\n      // Reseting mask state, masks will be applied on restore of the group.\n      this.current.activeSMask = null;\n    },\n\n    endGroup: function CanvasGraphics_endGroup(group) {\n      this.groupLevel--;\n      var groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n      // Turn off image smoothing to avoid sub pixel interpolation which can\n      // look kind of blurry for some pdfs.\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n      this.restore();\n    },\n\n    beginAnnotations: function CanvasGraphics_beginAnnotations() {\n      this.save();\n      if (this.baseTransform) {\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n      }\n    },\n\n    endAnnotations: function CanvasGraphics_endAnnotations() {\n      this.restore();\n    },\n\n    beginAnnotation: function CanvasGraphics_beginAnnotation(\n      rect,\n      transform,\n      matrix\n    ) {\n      this.save();\n      resetCtxToDefault(this.ctx);\n      this.current = new CanvasExtraState();\n\n      if (Array.isArray(rect) && rect.length === 4) {\n        var width = rect[2] - rect[0];\n        var height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    },\n\n    endAnnotation: function CanvasGraphics_endAnnotation() {\n      this.restore();\n    },\n\n    paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n      var ctx = this.ctx;\n      var width = img.width,\n        height = img.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph && glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    },\n\n    paintImageMaskXObjectRepeat: function CanvasGraphics_paintImageMaskXObjectRepeat(\n      imgData,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, imgData);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      var ctx = this.ctx;\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        ctx.save();\n        ctx.transform(scaleX, 0, 0, scaleY, positions[i], positions[i + 1]);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(\n      images\n    ) {\n      var ctx = this.ctx;\n\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      for (var i = 0, ii = images.length; i < ii; i++) {\n        var image = images[i];\n        var width = image.width,\n          height = image.height;\n\n        var maskCanvas = this.cachedCanvases.getCanvas(\n          \"maskCanvas\",\n          width,\n          height\n        );\n        var maskCtx = maskCanvas.context;\n        maskCtx.save();\n\n        putBinaryImageMask(maskCtx, image);\n\n        maskCtx.globalCompositeOperation = \"source-in\";\n\n        maskCtx.fillStyle = isPatternFill\n          ? fillColor.getPattern(maskCtx, this)\n          : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n\n        maskCtx.restore();\n\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    },\n\n    paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(\n      objId,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      var width = imgData.width;\n      var height = imgData.height;\n      var map = [];\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n          x: 0,\n          y: 0,\n          w: width,\n          h: height,\n        });\n      }\n      this.paintInlineImageXObjectGroup(imgData, map);\n    },\n\n    paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(\n      imgData\n    ) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var ctx = this.ctx;\n\n      this.save();\n      // scale the image to the unit square\n      ctx.scale(1 / width, -1 / height);\n\n      var currentTransform = ctx.mozCurrentTransformInverse;\n      var a = currentTransform[0],\n        b = currentTransform[1];\n      var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n      var c = currentTransform[2],\n        d = currentTransform[3];\n      var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n\n      var imgToPaint, tmpCanvas;\n      // typeof check is needed due to node.js support, see issue #8489\n      if (\n        (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n        !imgData.data\n      ) {\n        imgToPaint = imgData;\n      } else {\n        tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n        var tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      var paintWidth = width,\n        paintHeight = height;\n      var tmpCanvasId = \"prescale1\";\n      // Vertical or horizontal scaling shall not be more than 2 to not lose the\n      // pixels during drawImage operation, painting on the temporary canvas(es)\n      // that are twice smaller in size.\n      while (\n        (widthScale > 2 && paintWidth > 1) ||\n        (heightScale > 2 && paintHeight > 1)\n      ) {\n        var newWidth = paintWidth,\n          newHeight = paintHeight;\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n        tmpCanvas = this.cachedCanvases.getCanvas(\n          tmpCanvasId,\n          newWidth,\n          newHeight\n        );\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(\n          imgToPaint,\n          0,\n          0,\n          paintWidth,\n          paintHeight,\n          0,\n          0,\n          newWidth,\n          newHeight\n        );\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n      }\n      ctx.drawImage(\n        imgToPaint,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        -height,\n        width,\n        height\n      );\n\n      if (this.imageLayer) {\n        var position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3],\n        });\n      }\n      this.restore();\n    },\n\n    paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(\n      imgData,\n      map\n    ) {\n      var ctx = this.ctx;\n      var w = imgData.width;\n      var h = imgData.height;\n\n      var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      var tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n\n      for (var i = 0, ii = map.length; i < ii; i++) {\n        var entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(\n          tmpCanvas.canvas,\n          entry.x,\n          entry.y,\n          entry.w,\n          entry.h,\n          0,\n          -1,\n          1,\n          1\n        );\n        if (this.imageLayer) {\n          var position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h,\n          });\n        }\n        ctx.restore();\n      }\n    },\n\n    paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n      this.ctx.fillRect(0, 0, 1, 1);\n    },\n\n    paintXObject: function CanvasGraphics_paintXObject() {\n      warn(\"Unsupported 'paintXObject' command.\");\n    },\n\n    // Marked content\n\n    markPoint: function CanvasGraphics_markPoint(tag) {\n      // TODO Marked content.\n    },\n    markPointProps: function CanvasGraphics_markPointProps(tag, properties) {\n      // TODO Marked content.\n    },\n    beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {\n      // TODO Marked content.\n    },\n    beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(\n      tag,\n      properties\n    ) {\n      // TODO Marked content.\n    },\n    endMarkedContent: function CanvasGraphics_endMarkedContent() {\n      // TODO Marked content.\n    },\n\n    // Compatibility\n\n    beginCompat: function CanvasGraphics_beginCompat() {\n      // TODO ignore undefined operators (should we do that anyway?)\n    },\n    endCompat: function CanvasGraphics_endCompat() {\n      // TODO stop ignoring undefined operators\n    },\n\n    // Helper functions\n\n    consumePath: function CanvasGraphics_consumePath() {\n      var ctx = this.ctx;\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n        this.pendingClip = null;\n      }\n      ctx.beginPath();\n    },\n    getSinglePixelWidth(scale) {\n      if (this._cachedGetSinglePixelWidth === null) {\n        const inverse = this.ctx.mozCurrentTransformInverse;\n        // max of the current horizontal and vertical scale\n        this._cachedGetSinglePixelWidth = Math.sqrt(\n          Math.max(\n            inverse[0] * inverse[0] + inverse[1] * inverse[1],\n            inverse[2] * inverse[2] + inverse[3] * inverse[3]\n          )\n        );\n      }\n      return this._cachedGetSinglePixelWidth;\n    },\n    getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n      var transform = this.ctx.mozCurrentTransform;\n      return [\n        transform[0] * x + transform[2] * y + transform[4],\n        transform[1] * x + transform[3] * y + transform[5],\n      ];\n    },\n  };\n\n  for (var op in OPS) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n})();\n\nexport { CanvasGraphics };\n", "/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormatError, info, Util } from \"../shared/util.js\";\n\nvar ShadingIRs = {};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nShadingIRs.RadialAxial = {\n  fromIR: function RadialAxial_fromIR(raw) {\n    var type = raw[1];\n    var bbox = raw[2];\n    var colorStops = raw[3];\n    var p0 = raw[4];\n    var p1 = raw[5];\n    var r0 = raw[6];\n    var r1 = raw[7];\n    return {\n      type: \"Pattern\",\n      getPattern: function RadialAxial_getPattern(ctx) {\n        applyBoundingBox(ctx, bbox);\n        var grad;\n        if (type === \"axial\") {\n          grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n        } else if (type === \"radial\") {\n          grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n        }\n\n        for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n          var c = colorStops[i];\n          grad.addColorStop(c[0], c[1]);\n        }\n        return grad;\n      },\n    };\n  },\n};\n\nvar createMeshCanvas = (function createMeshCanvasClosure() {\n  function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n    // Very basic Gouraud-shaded triangle rasterization algorithm.\n    var coords = context.coords,\n      colors = context.colors;\n    var bytes = data.data,\n      rowSize = data.width * 4;\n    var tmp;\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    if (coords[p2 + 1] > coords[p3 + 1]) {\n      tmp = p2;\n      p2 = p3;\n      p3 = tmp;\n      tmp = c2;\n      c2 = c3;\n      c3 = tmp;\n    }\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n    var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n    var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n    var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n    var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n    var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n    if (y1 >= y3) {\n      return;\n    }\n    var c1r = colors[c1],\n      c1g = colors[c1 + 1],\n      c1b = colors[c1 + 2];\n    var c2r = colors[c2],\n      c2g = colors[c2 + 1],\n      c2b = colors[c2 + 2];\n    var c3r = colors[c3],\n      c3g = colors[c3 + 1],\n      c3b = colors[c3 + 2];\n\n    var minY = Math.round(y1),\n      maxY = Math.round(y3);\n    var xa, car, cag, cab;\n    var xb, cbr, cbg, cbb;\n    for (var y = minY; y <= maxY; y++) {\n      if (y < y2) {\n        let k;\n        if (y < y1) {\n          k = 0;\n        } else if (y1 === y2) {\n          k = 1;\n        } else {\n          k = (y1 - y) / (y1 - y2);\n        }\n        xa = x1 - (x1 - x2) * k;\n        car = c1r - (c1r - c2r) * k;\n        cag = c1g - (c1g - c2g) * k;\n        cab = c1b - (c1b - c2b) * k;\n      } else {\n        let k;\n        if (y > y3) {\n          k = 1;\n        } else if (y2 === y3) {\n          k = 0;\n        } else {\n          k = (y2 - y) / (y2 - y3);\n        }\n        xa = x2 - (x2 - x3) * k;\n        car = c2r - (c2r - c3r) * k;\n        cag = c2g - (c2g - c3g) * k;\n        cab = c2b - (c2b - c3b) * k;\n      }\n\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else if (y > y3) {\n        k = 1;\n      } else {\n        k = (y1 - y) / (y1 - y3);\n      }\n      xb = x1 - (x1 - x3) * k;\n      cbr = c1r - (c1r - c3r) * k;\n      cbg = c1g - (c1g - c3g) * k;\n      cbb = c1b - (c1b - c3b) * k;\n      var x1_ = Math.round(Math.min(xa, xb));\n      var x2_ = Math.round(Math.max(xa, xb));\n      var j = rowSize * y + x1_ * 4;\n      for (var x = x1_; x <= x2_; x++) {\n        k = (xa - x) / (xa - xb);\n        if (k < 0) {\n          k = 0;\n        } else if (k > 1) {\n          k = 1;\n        }\n        bytes[j++] = (car - (car - cbr) * k) | 0;\n        bytes[j++] = (cag - (cag - cbg) * k) | 0;\n        bytes[j++] = (cab - (cab - cbb) * k) | 0;\n        bytes[j++] = 255;\n      }\n    }\n  }\n\n  function drawFigure(data, figure, context) {\n    var ps = figure.coords;\n    var cs = figure.colors;\n    var i, ii;\n    switch (figure.type) {\n      case \"lattice\":\n        var verticesPerRow = figure.verticesPerRow;\n        var rows = Math.floor(ps.length / verticesPerRow) - 1;\n        var cols = verticesPerRow - 1;\n        for (i = 0; i < rows; i++) {\n          var q = i * verticesPerRow;\n          for (var j = 0; j < cols; j++, q++) {\n            drawTriangle(\n              data,\n              context,\n              ps[q],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n            drawTriangle(\n              data,\n              context,\n              ps[q + verticesPerRow + 1],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q + verticesPerRow + 1],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n          }\n        }\n        break;\n      case \"triangles\":\n        for (i = 0, ii = ps.length; i < ii; i += 3) {\n          drawTriangle(\n            data,\n            context,\n            ps[i],\n            ps[i + 1],\n            ps[i + 2],\n            cs[i],\n            cs[i + 1],\n            cs[i + 2]\n          );\n        }\n        break;\n      default:\n        throw new Error(\"illegal figure\");\n    }\n  }\n\n  // eslint-disable-next-line no-shadow\n  function createMeshCanvas(\n    bounds,\n    combinesScale,\n    coords,\n    colors,\n    figures,\n    backgroundColor,\n    cachedCanvases,\n    webGLContext\n  ) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    var EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    var BORDER_SIZE = 2;\n\n    var offsetX = Math.floor(bounds[0]);\n    var offsetY = Math.floor(bounds[1]);\n    var boundsWidth = Math.ceil(bounds[2]) - offsetX;\n    var boundsHeight = Math.ceil(bounds[3]) - offsetY;\n\n    var width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    var height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    var scaleX = boundsWidth / width;\n    var scaleY = boundsHeight / height;\n\n    var context = {\n      coords,\n      colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    var paddedWidth = width + BORDER_SIZE * 2;\n    var paddedHeight = height + BORDER_SIZE * 2;\n\n    var canvas, tmpCanvas, i, ii;\n    if (webGLContext.isEnabled) {\n      canvas = webGLContext.drawFigures({\n        width,\n        height,\n        backgroundColor,\n        figures,\n        context,\n      });\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=972126\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    } else {\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      var tmpCtx = tmpCanvas.context;\n\n      var data = tmpCtx.createImageData(width, height);\n      if (backgroundColor) {\n        var bytes = data.data;\n        for (i = 0, ii = bytes.length; i < ii; i += 4) {\n          bytes[i] = backgroundColor[0];\n          bytes[i + 1] = backgroundColor[1];\n          bytes[i + 2] = backgroundColor[2];\n          bytes[i + 3] = 255;\n        }\n      }\n      for (i = 0; i < figures.length; i++) {\n        drawFigure(data, figures[i], context);\n      }\n      tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    }\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n  return createMeshCanvas;\n})();\n\nShadingIRs.Mesh = {\n  fromIR: function Mesh_fromIR(raw) {\n    // var type = raw[1];\n    var coords = raw[2];\n    var colors = raw[3];\n    var figures = raw[4];\n    var bounds = raw[5];\n    var matrix = raw[6];\n    var bbox = raw[7];\n    var background = raw[8];\n    return {\n      type: \"Pattern\",\n      getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n        applyBoundingBox(ctx, bbox);\n        var scale;\n        if (shadingFill) {\n          scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n        } else {\n          // Obtain scale from matrix and current transformation matrix.\n          scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n          if (matrix) {\n            var matrixScale = Util.singularValueDecompose2dScale(matrix);\n            scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n          }\n        }\n\n        // Rasterizing on the main thread since sending/queue large canvases\n        // might cause OOM.\n        var temporaryPatternCanvas = createMeshCanvas(\n          bounds,\n          scale,\n          coords,\n          colors,\n          figures,\n          shadingFill ? null : background,\n          owner.cachedCanvases,\n          owner.webGLContext\n        );\n\n        if (!shadingFill) {\n          ctx.setTransform.apply(ctx, owner.baseTransform);\n          if (matrix) {\n            ctx.transform.apply(ctx, matrix);\n          }\n        }\n\n        ctx.translate(\n          temporaryPatternCanvas.offsetX,\n          temporaryPatternCanvas.offsetY\n        );\n        ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n        return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n      },\n    };\n  },\n};\n\nShadingIRs.Dummy = {\n  fromIR: function Dummy_fromIR() {\n    return {\n      type: \"Pattern\",\n      getPattern: function Dummy_fromIR_getPattern() {\n        return \"hotpink\";\n      },\n    };\n  },\n};\n\nfunction getShadingPatternFromIR(raw) {\n  var shadingIR = ShadingIRs[raw[0]];\n  if (!shadingIR) {\n    throw new Error(`Unknown IR type: ${raw[0]}`);\n  }\n  return shadingIR.fromIR(raw);\n}\n\nvar TilingPattern = (function TilingPatternClosure() {\n  var PaintType = {\n    COLORED: 1,\n    UNCOLORED: 2,\n  };\n\n  var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n\n  // eslint-disable-next-line no-shadow\n  function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n    this.type = \"Pattern\";\n    this.ctx = ctx;\n  }\n\n  TilingPattern.prototype = {\n    createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n      var operatorList = this.operatorList;\n      var bbox = this.bbox;\n      var xstep = this.xstep;\n      var ystep = this.ystep;\n      var paintType = this.paintType;\n      var tilingType = this.tilingType;\n      var color = this.color;\n      var canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n      info(\"TilingType: \" + tilingType);\n\n      // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n      // described by bbox, and may repeat regularly by shifting the cell by\n      // xstep and ystep.\n      // Because the HTML5 canvas API does not support pattern repetition with\n      // gaps in between, we use the xstep/ystep instead of the bbox's size.\n      //\n      // This has the following consequences (similarly for ystep):\n      //\n      // - If xstep is the same as bbox, then there is no observable difference.\n      //\n      // - If xstep is larger than bbox, then the pattern canvas is partially\n      //   empty: the area bounded by bbox is painted, the outside area is void.\n      //\n      // - If xstep is smaller than bbox, then the pixels between xstep and the\n      //   bbox boundary will be missing. This is INCORRECT behavior.\n      //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n      //   but overlapping cells without common pixels are still valid.\n      //   TODO: Fix the implementation, to allow this scenario to be painted\n      //   correctly.\n\n      var x0 = bbox[0],\n        y0 = bbox[1],\n        x1 = bbox[2],\n        y1 = bbox[3];\n\n      // Obtain scale from matrix and current transformation matrix.\n      var matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n      var curMatrixScale = Util.singularValueDecompose2dScale(\n        this.baseTransform\n      );\n      var combinedScale = [\n        matrixScale[0] * curMatrixScale[0],\n        matrixScale[1] * curMatrixScale[1],\n      ];\n\n      // Use width and height values that are as close as possible to the end\n      // result when the pattern is used. Too low value makes the pattern look\n      // blurry. Too large value makes it look too crispy.\n      var dimx = this.getSizeAndScale(\n        xstep,\n        this.ctx.canvas.width,\n        combinedScale[0]\n      );\n      var dimy = this.getSizeAndScale(\n        ystep,\n        this.ctx.canvas.height,\n        combinedScale[1]\n      );\n\n      var tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        dimx.size,\n        dimy.size,\n        true\n      );\n      var tmpCtx = tmpCanvas.context;\n      var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n      graphics.groupLevel = owner.groupLevel;\n\n      this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n      graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n      // transform coordinates to pattern space\n      graphics.transform(1, 0, 0, 1, -x0, -y0);\n\n      this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n\n      graphics.executeOperatorList(operatorList);\n\n      this.ctx.transform(1, 0, 0, 1, x0, y0);\n\n      // Rescale canvas so that the ctx.createPattern call generates a pattern\n      // with the desired size.\n      this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n      return tmpCanvas.canvas;\n    },\n\n    getSizeAndScale: function TilingPattern_getSizeAndScale(\n      step,\n      realOutputSize,\n      scale\n    ) {\n      // xstep / ystep may be negative -- normalize.\n      step = Math.abs(step);\n      // MAX_PATTERN_SIZE is used to avoid OOM situation.\n      // Use the destination canvas's size if it is bigger than the hard-coded\n      // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n      // whole canvas.\n      var maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n      var size = Math.ceil(step * scale);\n      if (size >= maxSize) {\n        size = maxSize;\n      } else {\n        scale = size / step;\n      }\n      return { scale, size };\n    },\n\n    clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n      if (Array.isArray(bbox) && bbox.length === 4) {\n        var bboxWidth = x1 - x0;\n        var bboxHeight = y1 - y0;\n        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n        graphics.clip();\n        graphics.endPath();\n      }\n    },\n\n    setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(\n      graphics,\n      paintType,\n      color\n    ) {\n      const context = graphics.ctx,\n        current = graphics.current;\n      switch (paintType) {\n        case PaintType.COLORED:\n          var ctx = this.ctx;\n          context.fillStyle = ctx.fillStyle;\n          context.strokeStyle = ctx.strokeStyle;\n          current.fillColor = ctx.fillStyle;\n          current.strokeColor = ctx.strokeStyle;\n          break;\n        case PaintType.UNCOLORED:\n          var cssColor = Util.makeCssRgb(color[0], color[1], color[2]);\n          context.fillStyle = cssColor;\n          context.strokeStyle = cssColor;\n          // Set color needed by image masks (fixes issues 3226 and 8741).\n          current.fillColor = cssColor;\n          current.strokeColor = cssColor;\n          break;\n        default:\n          throw new FormatError(`Unsupported paint type: ${paintType}`);\n      }\n    },\n\n    getPattern: function TilingPattern_getPattern(ctx, owner) {\n      ctx = this.ctx;\n      // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n      ctx.setTransform.apply(ctx, this.baseTransform);\n      ctx.transform.apply(ctx, this.matrix);\n\n      var temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n      return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n    },\n  };\n\n  return TilingPattern;\n})();\n\nexport { getShadingPatternFromIR, TilingPattern };\n", "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst GlobalWorkerOptions = Object.create(null);\n\n/**\n * Defines global port for worker process. Overrides the `workerSrc` option.\n * @var {Object}\n */\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\n/**\n * A string containing the path and filename of the worker file.\n *\n * NOTE: The `workerSrc` option should always be set, in order to prevent any\n *       issues when using the PDF.js library.\n * @var {string}\n */\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n", "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error, prefer-const: error */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  } else {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function (capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from \"../shared/util.js\";\nimport { SimpleXMLParser } from \"./xml_parser.js\";\n\nclass Metadata {\n  constructor(data) {\n    assert(typeof data === \"string\", \"Metadata: input is not a string\");\n\n    // Ghostscript may produce invalid metadata, so try to repair that first.\n    data = this._repair(data);\n\n    // Convert the string to an XML document.\n    const parser = new SimpleXMLParser();\n    const xmlDocument = parser.parseFromString(data);\n\n    this._metadataMap = new Map();\n\n    if (xmlDocument) {\n      this._parse(xmlDocument);\n    }\n  }\n\n  _repair(data) {\n    // Start by removing any \"junk\" before the first tag (see issue 10395).\n    return data\n      .replace(/^[^<]+/, \"\")\n      .replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n        const bytes = codes\n          .replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n            return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n          })\n          .replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n            switch (name) {\n              case \"amp\":\n                return \"&\";\n              case \"apos\":\n                return \"'\";\n              case \"gt\":\n                return \">\";\n              case \"lt\":\n                return \"<\";\n              case \"quot\":\n                return '\"';\n            }\n            throw new Error(`_repair: ${name} isn't defined.`);\n          });\n\n        let chars = \"\";\n        for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n          const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n          if (\n            code >= /* Space = */ 32 &&\n            code < /* Delete = */ 127 &&\n            code !== /* '<' = */ 60 &&\n            code !== /* '>' = */ 62 &&\n            code !== /* '&' = */ 38\n          ) {\n            chars += String.fromCharCode(code);\n          } else {\n            chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n          }\n        }\n\n        return \">\" + chars;\n      });\n  }\n\n  _parse(xmlDocument) {\n    let rdf = xmlDocument.documentElement;\n\n    if (rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n      // Wrapped in <xmpmeta>\n      rdf = rdf.firstChild;\n      while (rdf && rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n        rdf = rdf.nextSibling;\n      }\n    }\n\n    const nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\n    if (!rdf || nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n      return;\n    }\n\n    const children = rdf.childNodes;\n    for (let i = 0, ii = children.length; i < ii; i++) {\n      const desc = children[i];\n      if (desc.nodeName.toLowerCase() !== \"rdf:description\") {\n        continue;\n      }\n\n      for (let j = 0, jj = desc.childNodes.length; j < jj; j++) {\n        if (desc.childNodes[j].nodeName.toLowerCase() !== \"#text\") {\n          const entry = desc.childNodes[j];\n          const name = entry.nodeName.toLowerCase();\n\n          this._metadataMap.set(name, entry.textContent.trim());\n        }\n      }\n    }\n  }\n\n  get(name) {\n    return this._metadataMap.has(name) ? this._metadataMap.get(name) : null;\n  }\n\n  getAll() {\n    const obj = Object.create(null);\n    for (const [key, value] of this._metadataMap) {\n      obj[key] = value;\n    }\n    return obj;\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n", "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// The code for XMLParserBase copied from\n// https://github.com/mozilla/shumway/blob/16451d8836fa85f4b16eeda8b4bda2fa9e2b22b0/src/avm2/natives/xml.ts\n\nconst XMLParserErrorCode = {\n  NoError: 0,\n  EndOfDocument: -1,\n  UnterminatedCdat: -2,\n  UnterminatedXmlDeclaration: -3,\n  UnterminatedDoctypeDeclaration: -4,\n  UnterminatedComment: -5,\n  MalformedElement: -6,\n  OutOfMemory: -7,\n  UnterminatedAttributeValue: -8,\n  UnterminatedElement: -9,\n  ElementNeverBegun: -10,\n};\n\nfunction isWhitespace(s, index) {\n  const ch = s[index];\n  return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n}\n\nfunction isWhitespaceString(s) {\n  for (let i = 0, ii = s.length; i < ii; i++) {\n    if (!isWhitespace(s, i)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nclass XMLParserBase {\n  _resolveEntities(s) {\n    return s.replace(/&([^;]+);/g, (all, entity) => {\n      if (entity.substring(0, 2) === \"#x\") {\n        return String.fromCharCode(parseInt(entity.substring(2), 16));\n      } else if (entity.substring(0, 1) === \"#\") {\n        return String.fromCharCode(parseInt(entity.substring(1), 10));\n      }\n      switch (entity) {\n        case \"lt\":\n          return \"<\";\n        case \"gt\":\n          return \">\";\n        case \"amp\":\n          return \"&\";\n        case \"quot\":\n          return '\"';\n      }\n      return this.onResolveEntity(entity);\n    });\n  }\n\n  _parseContent(s, start) {\n    const attributes = [];\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    while (\n      pos < s.length &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\" &&\n      s[pos] !== \"?\"\n    ) {\n      skipWs();\n      let attrName = \"\",\n        attrValue = \"\";\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n        attrName += s[pos];\n        ++pos;\n      }\n      skipWs();\n      if (s[pos] !== \"=\") {\n        return null;\n      }\n      ++pos;\n      skipWs();\n      const attrEndChar = s[pos];\n      if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n        return null;\n      }\n      const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n      if (attrEndIndex < 0) {\n        return null;\n      }\n      attrValue = s.substring(pos, attrEndIndex);\n      attributes.push({\n        name: attrName,\n        value: this._resolveEntities(attrValue),\n      });\n      pos = attrEndIndex + 1;\n      skipWs();\n    }\n    return {\n      name,\n      attributes,\n      parsed: pos - start,\n    };\n  }\n\n  _parseProcessingInstruction(s, start) {\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    const attrStart = pos;\n    while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n      ++pos;\n    }\n    const value = s.substring(attrStart, pos);\n    return {\n      name,\n      value,\n      parsed: pos - start,\n    };\n  }\n\n  parseXml(s) {\n    let i = 0;\n    while (i < s.length) {\n      const ch = s[i];\n      let j = i;\n      if (ch === \"<\") {\n        ++j;\n        const ch2 = s[j];\n        let q;\n        switch (ch2) {\n          case \"/\":\n            ++j;\n            q = s.indexOf(\">\", j);\n            if (q < 0) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onEndElement(s.substring(j, q));\n            j = q + 1;\n            break;\n          case \"?\":\n            ++j;\n            const pi = this._parseProcessingInstruction(s, j);\n            if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n              this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n              return;\n            }\n            this.onPi(pi.name, pi.value);\n            j += pi.parsed + 2;\n            break;\n          case \"!\":\n            if (s.substring(j + 1, j + 3) === \"--\") {\n              q = s.indexOf(\"-->\", j + 3);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedComment);\n                return;\n              }\n              this.onComment(s.substring(j + 3, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n              q = s.indexOf(\"]]>\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedCdat);\n                return;\n              }\n              this.onCdata(s.substring(j + 8, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n              const q2 = s.indexOf(\"[\", j + 8);\n              let complexDoctype = false;\n              q = s.indexOf(\">\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                return;\n              }\n              if (q2 > 0 && q > q2) {\n                q = s.indexOf(\"]>\", j + 8);\n                if (q < 0) {\n                  this.onError(\n                    XMLParserErrorCode.UnterminatedDoctypeDeclaration\n                  );\n                  return;\n                }\n                complexDoctype = true;\n              }\n              const doctypeContent = s.substring(\n                j + 8,\n                q + (complexDoctype ? 1 : 0)\n              );\n              this.onDoctype(doctypeContent);\n              j = q + (complexDoctype ? 2 : 1);\n            } else {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            break;\n          default:\n            const content = this._parseContent(s, j);\n            if (content === null) {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            let isClosed = false;\n            if (\n              s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\"\n            ) {\n              isClosed = true;\n            } else if (\n              s.substring(j + content.parsed, j + content.parsed + 1) !== \">\"\n            ) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onBeginElement(content.name, content.attributes, isClosed);\n            j += content.parsed + (isClosed ? 2 : 1);\n            break;\n        }\n      } else {\n        while (j < s.length && s[j] !== \"<\") {\n          j++;\n        }\n        const text = s.substring(i, j);\n        this.onText(this._resolveEntities(text));\n      }\n      i = j;\n    }\n  }\n\n  onResolveEntity(name) {\n    return `&${name};`;\n  }\n\n  onPi(name, value) {}\n\n  onComment(text) {}\n\n  onCdata(text) {}\n\n  onDoctype(doctypeContent) {}\n\n  onText(text) {}\n\n  onBeginElement(name, attributes, isEmpty) {}\n\n  onEndElement(name) {}\n\n  onError(code) {}\n}\n\nclass SimpleDOMNode {\n  constructor(nodeName, nodeValue) {\n    this.nodeName = nodeName;\n    this.nodeValue = nodeValue;\n\n    Object.defineProperty(this, \"parentNode\", { value: null, writable: true });\n  }\n\n  get firstChild() {\n    return this.childNodes && this.childNodes[0];\n  }\n\n  get nextSibling() {\n    const childNodes = this.parentNode.childNodes;\n    if (!childNodes) {\n      return undefined;\n    }\n    const index = childNodes.indexOf(this);\n    if (index === -1) {\n      return undefined;\n    }\n    return childNodes[index + 1];\n  }\n\n  get textContent() {\n    if (!this.childNodes) {\n      return this.nodeValue || \"\";\n    }\n    return this.childNodes\n      .map(function (child) {\n        return child.textContent;\n      })\n      .join(\"\");\n  }\n\n  hasChildNodes() {\n    return this.childNodes && this.childNodes.length > 0;\n  }\n}\n\nclass SimpleXMLParser extends XMLParserBase {\n  constructor() {\n    super();\n    this._currentFragment = null;\n    this._stack = null;\n    this._errorCode = XMLParserErrorCode.NoError;\n  }\n\n  parseFromString(data) {\n    this._currentFragment = [];\n    this._stack = [];\n    this._errorCode = XMLParserErrorCode.NoError;\n\n    this.parseXml(data);\n\n    if (this._errorCode !== XMLParserErrorCode.NoError) {\n      return undefined; // return undefined on error\n    }\n\n    // We should only have one root.\n    const [documentElement] = this._currentFragment;\n    if (!documentElement) {\n      return undefined; // Return undefined if no root was found.\n    }\n    return { documentElement };\n  }\n\n  onResolveEntity(name) {\n    switch (name) {\n      case \"apos\":\n        return \"'\";\n    }\n    return super.onResolveEntity(name);\n  }\n\n  onText(text) {\n    if (isWhitespaceString(text)) {\n      return;\n    }\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onCdata(text) {\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onBeginElement(name, attributes, isEmpty) {\n    const node = new SimpleDOMNode(name);\n    node.childNodes = [];\n    this._currentFragment.push(node);\n    if (isEmpty) {\n      return;\n    }\n    this._stack.push(this._currentFragment);\n    this._currentFragment = node.childNodes;\n  }\n\n  onEndElement(name) {\n    this._currentFragment = this._stack.pop() || [];\n    const lastElement = this._currentFragment[this._currentFragment.length - 1];\n    if (!lastElement) {\n      return;\n    }\n    for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n      lastElement.childNodes[i].parentNode = lastElement;\n    }\n  }\n\n  onError(code) {\n    this._errorCode = code;\n  }\n}\n\nexport { SimpleXMLParser };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n\n    const initialData = params.initialData;\n    if (initialData && initialData.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader && firstReader.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader && fullReader.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeReaders.slice(0);\n    readers.forEach(function (rangeReader) {\n      rangeReader.cancel(reason);\n    });\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(stream, queuedChunks, progressiveDone = false) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({ value: undefined, done: true });\n      });\n      this._requests = [];\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n", "/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable no-multi-str */\n\nimport { shadow } from \"../shared/util.js\";\n\nclass WebGLContext {\n  constructor({ enable = false }) {\n    this._enabled = enable === true;\n  }\n\n  get isEnabled() {\n    let enabled = this._enabled;\n    if (enabled) {\n      enabled = WebGLUtils.tryInitGL();\n    }\n    return shadow(this, \"isEnabled\", enabled);\n  }\n\n  composeSMask({ layer, mask, properties }) {\n    return WebGLUtils.composeSMask(layer, mask, properties);\n  }\n\n  drawFigures({ width, height, backgroundColor, figures, context }) {\n    return WebGLUtils.drawFigures(\n      width,\n      height,\n      backgroundColor,\n      figures,\n      context\n    );\n  }\n\n  clear() {\n    WebGLUtils.cleanup();\n  }\n}\n\nvar WebGLUtils = (function WebGLUtilsClosure() {\n  function loadShader(gl, code, shaderType) {\n    var shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, code);\n    gl.compileShader(shader);\n    var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!compiled) {\n      var errorMsg = gl.getShaderInfoLog(shader);\n      throw new Error(\"Error during shader compilation: \" + errorMsg);\n    }\n    return shader;\n  }\n  function createVertexShader(gl, code) {\n    return loadShader(gl, code, gl.VERTEX_SHADER);\n  }\n  function createFragmentShader(gl, code) {\n    return loadShader(gl, code, gl.FRAGMENT_SHADER);\n  }\n  function createProgram(gl, shaders) {\n    var program = gl.createProgram();\n    for (var i = 0, ii = shaders.length; i < ii; ++i) {\n      gl.attachShader(program, shaders[i]);\n    }\n    gl.linkProgram(program);\n    var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n      var errorMsg = gl.getProgramInfoLog(program);\n      throw new Error(\"Error during program linking: \" + errorMsg);\n    }\n    return program;\n  }\n  function createTexture(gl, image, textureId) {\n    gl.activeTexture(textureId);\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    // Set the parameters so we can render any size image.\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    // Upload the image into the texture.\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    return texture;\n  }\n\n  var currentGL, currentCanvas;\n  function generateGL() {\n    if (currentGL) {\n      return;\n    }\n\n    // The temporary canvas is used in the WebGL context.\n    currentCanvas = document.createElement(\"canvas\");\n    currentGL = currentCanvas.getContext(\"webgl\", {\n      premultipliedalpha: false,\n    });\n  }\n\n  var smaskVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n\n  var smaskFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n\n  var smaskCache = null;\n\n  function initSmaskGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n    cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n\n    var texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n    var texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n    var texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n\n    // provide texture coordinates for the rectangle.\n    var texCoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0.0, 0.0,\n      1.0, 0.0,\n      0.0, 1.0,\n      0.0, 1.0,\n      1.0, 0.0,\n      1.0, 1.0]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(texCoordLocation);\n    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.uniform1i(texLayerLocation, 0);\n    gl.uniform1i(texMaskLocation, 1);\n\n    smaskCache = cache;\n  }\n\n  function composeSMask(layer, mask, properties) {\n    var width = layer.width,\n      height = layer.height;\n\n    if (!smaskCache) {\n      initSmaskGL();\n    }\n    var cache = smaskCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    if (properties.backdrop) {\n      gl.uniform4f(\n        cache.resolutionLocation,\n        properties.backdrop[0],\n        properties.backdrop[1],\n        properties.backdrop[2],\n        1\n      );\n    } else {\n      gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n    }\n    gl.uniform1i(\n      cache.subtypeLocation,\n      properties.subtype === \"Luminosity\" ? 1 : 0\n    );\n\n    // Create a textures\n    var texture = createTexture(gl, layer, gl.TEXTURE0);\n    var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n\n    // Create a buffer and put a single clipspace rectangle in\n    // it (2 triangles)\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0, 0,\n      width, 0,\n      0, height,\n      0, height,\n      width, 0,\n      width, height]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // draw\n    gl.clearColor(0, 0, 0, 0);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    gl.flush();\n\n    gl.deleteTexture(texture);\n    gl.deleteTexture(maskTexture);\n    gl.deleteBuffer(buffer);\n\n    return canvas;\n  }\n\n  var figuresVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n\n  var figuresFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n\n  var figuresCache = null;\n\n  function initFiguresGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n    cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n\n    figuresCache = cache;\n  }\n\n  function drawFigures(width, height, backgroundColor, figures, context) {\n    if (!figuresCache) {\n      initFiguresGL();\n    }\n    var cache = figuresCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    // count triangle points\n    var count = 0;\n    var i, ii, rows;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      switch (figures[i].type) {\n        case \"lattice\":\n          rows = (figures[i].coords.length / figures[i].verticesPerRow) | 0;\n          count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n          break;\n        case \"triangles\":\n          count += figures[i].coords.length;\n          break;\n      }\n    }\n    // transfer data\n    var coords = new Float32Array(count * 2);\n    var colors = new Uint8Array(count * 3);\n    var coordsMap = context.coords,\n      colorsMap = context.colors;\n    var pIndex = 0,\n      cIndex = 0;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n        ps = figure.coords,\n        cs = figure.colors;\n      switch (figure.type) {\n        case \"lattice\":\n          var cols = figure.verticesPerRow;\n          rows = (ps.length / cols) | 0;\n          for (var row = 1; row < rows; row++) {\n            var offset = row * cols + 1;\n            for (var col = 1; col < cols; col++, offset++) {\n              coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n              coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n              coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n              coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n              coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n              coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n              colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n              colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n              colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n              colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n              colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n              colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n              colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n              colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n              colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n\n              coords[pIndex + 6] = coords[pIndex + 2];\n              coords[pIndex + 7] = coords[pIndex + 3];\n              coords[pIndex + 8] = coords[pIndex + 4];\n              coords[pIndex + 9] = coords[pIndex + 5];\n              coords[pIndex + 10] = coordsMap[ps[offset]];\n              coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n              colors[cIndex + 9] = colors[cIndex + 3];\n              colors[cIndex + 10] = colors[cIndex + 4];\n              colors[cIndex + 11] = colors[cIndex + 5];\n              colors[cIndex + 12] = colors[cIndex + 6];\n              colors[cIndex + 13] = colors[cIndex + 7];\n              colors[cIndex + 14] = colors[cIndex + 8];\n              colors[cIndex + 15] = colorsMap[cs[offset]];\n              colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n              colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n              pIndex += 12;\n              cIndex += 18;\n            }\n          }\n          break;\n        case \"triangles\":\n          for (var j = 0, jj = ps.length; j < jj; j++) {\n            coords[pIndex] = coordsMap[ps[j]];\n            coords[pIndex + 1] = coordsMap[ps[j] + 1];\n            colors[cIndex] = colorsMap[cs[j]];\n            colors[cIndex + 1] = colorsMap[cs[j] + 1];\n            colors[cIndex + 2] = colorsMap[cs[j] + 2];\n            pIndex += 2;\n            cIndex += 3;\n          }\n          break;\n      }\n    }\n\n    // draw\n    if (backgroundColor) {\n      gl.clearColor(\n        backgroundColor[0] / 255,\n        backgroundColor[1] / 255,\n        backgroundColor[2] / 255,\n        1.0\n      );\n    } else {\n      gl.clearColor(0, 0, 0, 0);\n    }\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    var coordsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    var colorsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.colorLocation);\n    gl.vertexAttribPointer(\n      cache.colorLocation,\n      3,\n      gl.UNSIGNED_BYTE,\n      false,\n      0,\n      0\n    );\n\n    gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n    gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n\n    gl.flush();\n\n    gl.deleteBuffer(coordsBuffer);\n    gl.deleteBuffer(colorsBuffer);\n\n    return canvas;\n  }\n\n  return {\n    tryInitGL() {\n      try {\n        generateGL();\n        return !!currentGL;\n      } catch (ex) {}\n      return false;\n    },\n\n    composeSMask,\n\n    drawFigures,\n\n    cleanup() {\n      if (smaskCache && smaskCache.canvas) {\n        smaskCache.canvas.width = 0;\n        smaskCache.canvas.height = 0;\n      }\n      if (figuresCache && figuresCache.canvas) {\n        figuresCache.canvas.width = 0;\n        figuresCache.canvas.height = 0;\n      }\n      smaskCache = null;\n      figuresCache = null;\n    },\n  };\n})();\n\nexport { WebGLContext };\n", "/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {Object} svgFactory\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(parameters, isRenderable = false, ignoreBorder = false) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `-${rect[0]}px -${rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width = width - 2 * data.borderStyle.width;\n        height = height - 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeCssRgb(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLSectionElement} container\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(container, trigger, data) {\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof AnnotationElement\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the link annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LinkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"linkAnnotation\";\n\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else {\n      this._bindLink(link, data.dest);\n    }\n\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.navigateTo(destination);\n      }\n      return false;\n    };\n    if (destination) {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  /**\n   * Render the widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof WidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Show only the container for unsupported field types.\n    return this.container;\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderInteractiveForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderInteractiveForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = this.data.fieldValue;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", this.data.fieldValue);\n      }\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n\n      let font = null;\n      if (\n        this.data.fontRefName &&\n        this.page.commonObjs.has(this.data.fontRefName)\n      ) {\n        font = this.page.commonObjs.get(this.data.fontRefName);\n      }\n      this._setTextStyle(element, font);\n    }\n\n    if (this.data.textAlignment !== null) {\n      element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @param {Object} font\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element, font) {\n    // TODO: This duplicates some of the logic in CanvasGraphics.setFont().\n    const style = element.style;\n    style.fontSize = `${this.data.fontSize}px`;\n    style.direction = this.data.fontDirection < 0 ? \"rtl\" : \"ltr\";\n\n    if (!font) {\n      return;\n    }\n\n    let bold = \"normal\";\n    if (font.black) {\n      bold = \"900\";\n    } else if (font.bold) {\n      bold = \"bold\";\n    }\n    style.fontWeight = bold;\n    style.fontStyle = font.italic ? \"italic\" : \"normal\";\n\n    // Use a reasonable default font if the font doesn't specify a fallback.\n    const fontFamily = font.loadedName ? `\"${font.loadedName}\", ` : \"\";\n    const fallbackName = font.fallbackName || \"Helvetica, sans-serif\";\n    style.fontFamily = fontFamily + fallbackName;\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the checkbox widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof CheckboxWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = this.data.readOnly;\n    element.type = \"checkbox\";\n    element.name = this.data.fieldName;\n    if (this.data.fieldValue && this.data.fieldValue !== \"Off\") {\n      element.setAttribute(\"checked\", true);\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the radio button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof RadioButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = this.data.readOnly;\n    element.type = \"radio\";\n    element.name = this.data.fieldName;\n    if (this.data.fieldValue === this.data.buttonValue) {\n      element.setAttribute(\"checked\", true);\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  /**\n   * Render the push button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof PushButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the choice widget annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof ChoiceWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.fieldValue.includes(option.displayValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the popup annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PopupAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElement = this.layer.querySelector(selector);\n    if (!parentElement) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: parentElement,\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const parentLeft = parseFloat(parentElement.style.left);\n    const parentWidth = parseFloat(parentElement.style.width);\n    this.container.style.transformOrigin = `-${parentLeft + parentWidth}px -${\n      parentElement.style.top\n    }`;\n    this.container.style.left = `${parentLeft + parentWidth}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  /**\n   * Render the popup's HTML element.\n   *\n   * @public\n   * @memberof PopupElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.setAttribute(\"hidden\", true);\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeCssRgb(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    // Attach the event listeners to the trigger element.\n    this.trigger.addEventListener(\"click\", this._toggle.bind(this));\n    this.trigger.addEventListener(\"mouseover\", this._show.bind(this, false));\n    this.trigger.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hasAttribute(\"hidden\")) {\n      this.hideElement.removeAttribute(\"hidden\");\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n      this.hideElement.setAttribute(\"hidden\", true);\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the free text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof FreeTextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the line annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the square annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquareAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the circle annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CircleAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the polyline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PolylineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(this.container, polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the caret annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CaretAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the ink annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof InkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(this.container, polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the highlight annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof HighlightAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"highlightAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the underline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof UnderlineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"underlineAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the squiggly annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquigglyAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squigglyAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the strikeout annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StrikeOutAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"strikeoutAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the stamp annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StampAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, /* isRenderable = */ true);\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    if (this.linkService.eventBus) {\n      this.linkService.eventBus.dispatch(\"fileattachmentannotation\", {\n        source: this,\n        id: stringToPDFString(filename),\n        filename,\n        content,\n      });\n    }\n  }\n\n  /**\n   * Render the file attachment annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof FileAttachmentAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(this.container, trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    if (!this.downloadManager) {\n      warn(\"Download cannot be started due to unavailable download manager\");\n      return;\n    }\n    this.downloadManager.downloadData(this.content, this.filename, \"\");\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms: parameters.renderInteractiveForms || false,\n        svgFactory: new DOMSVGFactory(),\n      });\n      if (element.isRenderable) {\n        parameters.div.appendChild(element.render());\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    for (const data of parameters.annotations) {\n      const element = parameters.div.querySelector(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (element) {\n        element.style.transform = `matrix(${parameters.viewport.transform.join(\n          \",\"\n        )})`;\n      }\n    }\n    parameters.div.removeAttribute(\"hidden\");\n  }\n}\n\nexport { AnnotationLayer };\n", "/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {TextContent} [textContent] - Text content to render (the object\n *   is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {PageViewport} viewport - The target viewport to properly\n *   layout the text runs.\n * @property {Array} [textDivs] - HTML elements that are correspond to the\n *   text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array} [textContentItemsStr] - Strings that correspond to the\n *   `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\nvar renderTextLayer = (function renderTextLayerClosure() {\n  var MAX_TEXT_DIVS_TO_RENDER = 100000;\n\n  var NonWhitespaceRegexp = /\\S/;\n\n  function isAllWhitespace(str) {\n    return !NonWhitespaceRegexp.test(str);\n  }\n\n  function appendText(task, geom, styles) {\n    // Initialize all used properties to keep the caches monomorphic.\n    var textDiv = document.createElement(\"span\");\n    var textDivProperties = {\n      angle: 0,\n      canvasWidth: 0,\n      isWhitespace: false,\n      originalTransform: null,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingTop: 0,\n      scale: 1,\n    };\n\n    task._textDivs.push(textDiv);\n    if (isAllWhitespace(geom.str)) {\n      textDivProperties.isWhitespace = true;\n      task._textDivProperties.set(textDiv, textDivProperties);\n      return;\n    }\n\n    var tx = Util.transform(task._viewport.transform, geom.transform);\n    var angle = Math.atan2(tx[1], tx[0]);\n    var style = styles[geom.fontName];\n    if (style.vertical) {\n      angle += Math.PI / 2;\n    }\n    var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n    var fontAscent = fontHeight;\n    if (style.ascent) {\n      fontAscent = style.ascent * fontAscent;\n    } else if (style.descent) {\n      fontAscent = (1 + style.descent) * fontAscent;\n    }\n\n    let left, top;\n    if (angle === 0) {\n      left = tx[4];\n      top = tx[5] - fontAscent;\n    } else {\n      left = tx[4] + fontAscent * Math.sin(angle);\n      top = tx[5] - fontAscent * Math.cos(angle);\n    }\n    // Setting the style properties individually, rather than all at once,\n    // should be OK since the `textDiv` isn't appended to the document yet.\n    textDiv.style.left = `${left}px`;\n    textDiv.style.top = `${top}px`;\n    textDiv.style.fontSize = `${fontHeight}px`;\n    textDiv.style.fontFamily = style.fontFamily;\n\n    textDiv.textContent = geom.str;\n    // `fontName` is only used by the FontInspector, and we only use `dataset`\n    // here to make the font name available in the debugger.\n    if (task._fontInspectorEnabled) {\n      textDiv.dataset.fontName = geom.fontName;\n    }\n    if (angle !== 0) {\n      textDivProperties.angle = angle * (180 / Math.PI);\n    }\n    // We don't bother scaling single-char text divs, because it has very\n    // little effect on text highlighting. This makes scrolling on docs with\n    // lots of such divs a lot faster.\n    let shouldScaleText = false;\n    if (geom.str.length > 1) {\n      shouldScaleText = true;\n    } else if (geom.transform[0] !== geom.transform[3]) {\n      const absScaleX = Math.abs(geom.transform[0]),\n        absScaleY = Math.abs(geom.transform[3]);\n      // When the horizontal/vertical scaling differs significantly, also scale\n      // even single-char text to improve highlighting (fixes issue11713.pdf).\n      if (\n        absScaleX !== absScaleY &&\n        Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n      ) {\n        shouldScaleText = true;\n      }\n    }\n    if (shouldScaleText) {\n      if (style.vertical) {\n        textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n      } else {\n        textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n      }\n    }\n    task._textDivProperties.set(textDiv, textDivProperties);\n    if (task._textContentStream) {\n      task._layoutText(textDiv);\n    }\n\n    if (task._enhanceTextSelection) {\n      var angleCos = 1,\n        angleSin = 0;\n      if (angle !== 0) {\n        angleCos = Math.cos(angle);\n        angleSin = Math.sin(angle);\n      }\n      var divWidth =\n        (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n      var divHeight = fontHeight;\n\n      var m, b;\n      if (angle !== 0) {\n        m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n        b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n      } else {\n        b = [left, top, left + divWidth, top + divHeight];\n      }\n\n      task._bounds.push({\n        left: b[0],\n        top: b[1],\n        right: b[2],\n        bottom: b[3],\n        div: textDiv,\n        size: [divWidth, divHeight],\n        m,\n      });\n    }\n  }\n\n  function render(task) {\n    if (task._canceled) {\n      return;\n    }\n    var textDivs = task._textDivs;\n    var capability = task._capability;\n    var textDivsLength = textDivs.length;\n\n    // No point in rendering many divs as it would make the browser\n    // unusable even after the divs are rendered.\n    if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n      task._renderingDone = true;\n      capability.resolve();\n      return;\n    }\n\n    if (!task._textContentStream) {\n      for (var i = 0; i < textDivsLength; i++) {\n        task._layoutText(textDivs[i]);\n      }\n    }\n\n    task._renderingDone = true;\n    capability.resolve();\n  }\n\n  function findPositiveMin(ts, offset, count) {\n    let result = 0;\n    for (let i = 0; i < count; i++) {\n      const t = ts[offset++];\n      if (t > 0) {\n        result = result ? Math.min(t, result) : t;\n      }\n    }\n    return result;\n  }\n\n  function expand(task) {\n    var bounds = task._bounds;\n    var viewport = task._viewport;\n\n    var expanded = expandBounds(viewport.width, viewport.height, bounds);\n    for (var i = 0; i < expanded.length; i++) {\n      var div = bounds[i].div;\n      var divProperties = task._textDivProperties.get(div);\n      if (divProperties.angle === 0) {\n        divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n        divProperties.paddingTop = bounds[i].top - expanded[i].top;\n        divProperties.paddingRight = expanded[i].right - bounds[i].right;\n        divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n        task._textDivProperties.set(div, divProperties);\n        continue;\n      }\n      // Box is rotated -- trying to find padding so rotated div will not\n      // exceed its expanded bounds.\n      var e = expanded[i],\n        b = bounds[i];\n      var m = b.m,\n        c = m[0],\n        s = m[1];\n      // Finding intersections with expanded box.\n      var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n      var ts = new Float64Array(64);\n      points.forEach(function (p, j) {\n        var t = Util.applyTransform(p, m);\n        ts[j + 0] = c && (e.left - t[0]) / c;\n        ts[j + 4] = s && (e.top - t[1]) / s;\n        ts[j + 8] = c && (e.right - t[0]) / c;\n        ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n        ts[j + 16] = s && (e.left - t[0]) / -s;\n        ts[j + 20] = c && (e.top - t[1]) / c;\n        ts[j + 24] = s && (e.right - t[0]) / -s;\n        ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n        ts[j + 32] = c && (e.left - t[0]) / -c;\n        ts[j + 36] = s && (e.top - t[1]) / -s;\n        ts[j + 40] = c && (e.right - t[0]) / -c;\n        ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n        ts[j + 48] = s && (e.left - t[0]) / s;\n        ts[j + 52] = c && (e.top - t[1]) / -c;\n        ts[j + 56] = s && (e.right - t[0]) / s;\n        ts[j + 60] = c && (e.bottom - t[1]) / -c;\n      });\n      // Not based on math, but to simplify calculations, using cos and sin\n      // absolute values to not exceed the box (it can but insignificantly).\n      var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n      divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n      divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n      divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n      divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n      task._textDivProperties.set(div, divProperties);\n    }\n  }\n\n  function expandBounds(width, height, boxes) {\n    var bounds = boxes.map(function (box, i) {\n      return {\n        x1: box.left,\n        y1: box.top,\n        x2: box.right,\n        y2: box.bottom,\n        index: i,\n        x1New: undefined,\n        x2New: undefined,\n      };\n    });\n    expandBoundsLTR(width, bounds);\n    var expanded = new Array(boxes.length);\n    bounds.forEach(function (b) {\n      var i = b.index;\n      expanded[i] = {\n        left: b.x1New,\n        top: 0,\n        right: b.x2New,\n        bottom: 0,\n      };\n    });\n\n    // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n    // array and objects.\n    boxes.map(function (box, i) {\n      var e = expanded[i],\n        b = bounds[i];\n      b.x1 = box.top;\n      b.y1 = width - e.right;\n      b.x2 = box.bottom;\n      b.y2 = width - e.left;\n      b.index = i;\n      b.x1New = undefined;\n      b.x2New = undefined;\n    });\n    expandBoundsLTR(height, bounds);\n\n    bounds.forEach(function (b) {\n      var i = b.index;\n      expanded[i].top = b.x1New;\n      expanded[i].bottom = b.x2New;\n    });\n    return expanded;\n  }\n\n  function expandBoundsLTR(width, bounds) {\n    // Sorting by x1 coordinate and walk by the bounds in the same order.\n    bounds.sort(function (a, b) {\n      return a.x1 - b.x1 || a.index - b.index;\n    });\n\n    // First we see on the horizon is a fake boundary.\n    var fakeBoundary = {\n      x1: -Infinity,\n      y1: -Infinity,\n      x2: 0,\n      y2: Infinity,\n      index: -1,\n      x1New: 0,\n      x2New: 0,\n    };\n    var horizon = [\n      {\n        start: -Infinity,\n        end: Infinity,\n        boundary: fakeBoundary,\n      },\n    ];\n\n    bounds.forEach(function (boundary) {\n      // Searching for the affected part of horizon.\n      // TODO red-black tree or simple binary search\n      var i = 0;\n      while (i < horizon.length && horizon[i].end <= boundary.y1) {\n        i++;\n      }\n      var j = horizon.length - 1;\n      while (j >= 0 && horizon[j].start >= boundary.y2) {\n        j--;\n      }\n\n      var horizonPart, affectedBoundary;\n      var q,\n        k,\n        maxXNew = -Infinity;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        var xNew;\n        if (affectedBoundary.x2 > boundary.x1) {\n          // In the middle of the previous element, new x shall be at the\n          // boundary start. Extending if further if the affected boundary\n          // placed on top of the current one.\n          xNew =\n            affectedBoundary.index > boundary.index\n              ? affectedBoundary.x1New\n              : boundary.x1;\n        } else if (affectedBoundary.x2New === undefined) {\n          // We have some space in between, new x in middle will be a fair\n          // choice.\n          xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n        } else {\n          // Affected boundary has x2new set, using it as new x.\n          xNew = affectedBoundary.x2New;\n        }\n        if (xNew > maxXNew) {\n          maxXNew = xNew;\n        }\n      }\n\n      // Set new x1 for current boundary.\n      boundary.x1New = maxXNew;\n\n      // Adjusts new x2 for the affected boundaries.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New === undefined) {\n          // Was not set yet, choosing new x if possible.\n          if (affectedBoundary.x2 > boundary.x1) {\n            // Current and affected boundaries intersect. If affected boundary\n            // is placed on top of the current, shrinking the affected.\n            if (affectedBoundary.index > boundary.index) {\n              affectedBoundary.x2New = affectedBoundary.x2;\n            }\n          } else {\n            affectedBoundary.x2New = maxXNew;\n          }\n        } else if (affectedBoundary.x2New > maxXNew) {\n          // Affected boundary is touching new x, pushing it back.\n          affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n        }\n      }\n\n      // Fixing the horizon.\n      var changedHorizon = [],\n        lastBoundary = null;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        // Checking which boundary will be visible.\n        var useBoundary =\n          affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n        if (lastBoundary === useBoundary) {\n          // Merging with previous.\n          changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n        } else {\n          changedHorizon.push({\n            start: horizonPart.start,\n            end: horizonPart.end,\n            boundary: useBoundary,\n          });\n          lastBoundary = useBoundary;\n        }\n      }\n      if (horizon[i].start < boundary.y1) {\n        changedHorizon[0].start = boundary.y1;\n        changedHorizon.unshift({\n          start: horizon[i].start,\n          end: boundary.y1,\n          boundary: horizon[i].boundary,\n        });\n      }\n      if (boundary.y2 < horizon[j].end) {\n        changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n        changedHorizon.push({\n          start: boundary.y2,\n          end: horizon[j].end,\n          boundary: horizon[j].boundary,\n        });\n      }\n\n      // Set x2 new of boundary that is no longer visible (see overlapping case\n      // above).\n      // TODO more efficient, e.g. via reference counting.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New !== undefined) {\n          continue;\n        }\n        var used = false;\n        for (\n          k = i - 1;\n          !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n          k--\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (\n          k = j + 1;\n          !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n          k++\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (k = 0; !used && k < changedHorizon.length; k++) {\n          used = changedHorizon[k].boundary === affectedBoundary;\n        }\n        if (!used) {\n          affectedBoundary.x2New = maxXNew;\n        }\n      }\n\n      Array.prototype.splice.apply(\n        horizon,\n        [i, j - i + 1].concat(changedHorizon)\n      );\n    });\n\n    // Set new x2 for all unset boundaries.\n    horizon.forEach(function (horizonPart) {\n      var affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n      }\n    });\n  }\n\n  /**\n   * Text layer rendering task.\n   *\n   * @param {TextContent} textContent\n   * @param {HTMLElement} container\n   * @param {PageViewport} viewport\n   * @param {Array} textDivs\n   * @param {boolean} enhanceTextSelection\n   * @private\n   */\n  function TextLayerRenderTask({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!(\n      globalThis.FontInspector && globalThis.FontInspector.enabled\n    );\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        /* Avoid \"Uncaught promise\" messages in the console. */\n      });\n  }\n  TextLayerRenderTask.prototype = {\n    get promise() {\n      return this._capability.promise;\n    },\n\n    cancel: function TextLayer_cancel() {\n      this._canceled = true;\n      if (this._reader) {\n        this._reader.cancel(new AbortException(\"TextLayer task cancelled.\"));\n        this._reader = null;\n      }\n      if (this._renderTimer !== null) {\n        clearTimeout(this._renderTimer);\n        this._renderTimer = null;\n      }\n      this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n    },\n\n    _processItems(items, styleCache) {\n      for (let i = 0, len = items.length; i < len; i++) {\n        this._textContentItemsStr.push(items[i].str);\n        appendText(this, items[i], styleCache);\n      }\n    },\n\n    _layoutText(textDiv) {\n      const textDivProperties = this._textDivProperties.get(textDiv);\n      if (textDivProperties.isWhitespace) {\n        return;\n      }\n\n      let transform = \"\";\n      if (textDivProperties.canvasWidth !== 0) {\n        const { fontSize, fontFamily } = textDiv.style;\n\n        // Only build font string and set to context if different from last.\n        if (\n          fontSize !== this._layoutTextLastFontSize ||\n          fontFamily !== this._layoutTextLastFontFamily\n        ) {\n          this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n          this._layoutTextLastFontSize = fontSize;\n          this._layoutTextLastFontFamily = fontFamily;\n        }\n        // Only measure the width for multi-char text divs, see `appendText`.\n        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          transform = `scaleX(${textDivProperties.scale})`;\n        }\n      }\n      if (textDivProperties.angle !== 0) {\n        transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n      }\n      if (transform.length > 0) {\n        if (this._enhanceTextSelection) {\n          textDivProperties.originalTransform = transform;\n        }\n        textDiv.style.transform = transform;\n      }\n      this._textDivProperties.set(textDiv, textDivProperties);\n      this._container.appendChild(textDiv);\n    },\n\n    _render: function TextLayer_render(timeout) {\n      const capability = createPromiseCapability();\n      let styleCache = Object.create(null);\n\n      // The temporary canvas is used to measure text length in the DOM.\n      const canvas = document.createElement(\"canvas\");\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n      ) {\n        canvas.mozOpaque = true;\n      }\n      this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n      if (this._textContent) {\n        const textItems = this._textContent.items;\n        const textStyles = this._textContent.styles;\n        this._processItems(textItems, textStyles);\n        capability.resolve();\n      } else if (this._textContentStream) {\n        const pump = () => {\n          this._reader.read().then(({ value, done }) => {\n            if (done) {\n              capability.resolve();\n              return;\n            }\n\n            Object.assign(styleCache, value.styles);\n            this._processItems(value.items, styleCache);\n            pump();\n          }, capability.reject);\n        };\n\n        this._reader = this._textContentStream.getReader();\n        pump();\n      } else {\n        throw new Error(\n          'Neither \"textContent\" nor \"textContentStream\"' +\n            \" parameters specified.\"\n        );\n      }\n\n      capability.promise.then(() => {\n        styleCache = null;\n        if (!timeout) {\n          // Render right away\n          render(this);\n        } else {\n          // Schedule\n          this._renderTimer = setTimeout(() => {\n            render(this);\n            this._renderTimer = null;\n          }, timeout);\n        }\n      }, this._capability.reject);\n    },\n\n    expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n      if (!this._enhanceTextSelection || !this._renderingDone) {\n        return;\n      }\n      if (this._bounds !== null) {\n        expand(this);\n        this._bounds = null;\n      }\n      const transformBuf = [],\n        paddingBuf = [];\n\n      for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n        const div = this._textDivs[i];\n        const divProps = this._textDivProperties.get(div);\n\n        if (divProps.isWhitespace) {\n          continue;\n        }\n        if (expandDivs) {\n          transformBuf.length = 0;\n          paddingBuf.length = 0;\n\n          if (divProps.originalTransform) {\n            transformBuf.push(divProps.originalTransform);\n          }\n          if (divProps.paddingTop > 0) {\n            paddingBuf.push(`${divProps.paddingTop}px`);\n            transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingRight > 0) {\n            paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingBottom > 0) {\n            paddingBuf.push(`${divProps.paddingBottom}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingLeft > 0) {\n            paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n            transformBuf.push(\n              `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n            );\n          } else {\n            paddingBuf.push(0);\n          }\n\n          div.style.padding = paddingBuf.join(\" \");\n          if (transformBuf.length) {\n            div.style.transform = transformBuf.join(\" \");\n          }\n        } else {\n          div.style.padding = null;\n          div.style.transform = divProps.originalTransform;\n        }\n      }\n    },\n  };\n\n  /**\n   * Starts rendering of the text layer.\n   *\n   * @param {TextLayerRenderParameters} renderParameters\n   * @returns {TextLayerRenderTask}\n   */\n  // eslint-disable-next-line no-shadow\n  function renderTextLayer(renderParameters) {\n    var task = new TextLayerRenderTask({\n      textContent: renderParameters.textContent,\n      textContentStream: renderParameters.textContentStream,\n      container: renderParameters.container,\n      viewport: renderParameters.viewport,\n      textDivs: renderParameters.textDivs,\n      textContentItemsStr: renderParameters.textContentItemsStr,\n      enhanceTextSelection: renderParameters.enhanceTextSelection,\n    });\n    task._render(renderParameters.timeout);\n    return task;\n  }\n\n  return renderTextLayer;\n})();\n\nexport { renderTextLayer };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n/* eslint no-var: error */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nlet SVGGraphics = function () {\n  throw new Error(\"Not implemented: SVGGraphics\");\n};\n\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89,\n      0x50,\n      0x4e,\n      0x47,\n      0x0d,\n      0x0a,\n      0x1a,\n      0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    function deflateSync(literals) {\n      if (!isNodeJS) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n      }\n      try {\n        // NOTE: This implementation is far from perfect, but already way better\n        // than not applying any compression.\n        //\n        // A better algorithm will try to choose a good predictor/filter and\n        // then choose a suitable zlib compression strategy (e.g. 3,Z_RLE).\n        //\n        // Node v0.11.12 zlib.deflateSync is introduced (and returns a Buffer).\n        // Node v3.0.0   Buffer inherits from Uint8Array.\n        // Node v8.0.0   zlib.deflateSync accepts Uint8Array as input.\n        let input;\n        // eslint-disable-next-line no-undef\n        if (parseInt(process.versions.node) >= 8) {\n          input = literals;\n        } else {\n          // eslint-disable-next-line no-undef\n          input = Buffer.from(literals);\n        }\n        const output = __non_webpack_require__(\"zlib\").deflateSync(input, {\n          level: 9,\n        });\n        return output instanceof Uint8Array ? output : new Uint8Array(output);\n      } catch (e) {\n        warn(\n          \"Not compressing PNG because zlib.deflateSync is unavailable: \" + e\n        );\n      }\n\n      return deflateSyncUncompressed(literals);\n    }\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  // eslint-disable-next-line no-shadow\n  SVGGraphics = class SVGGraphics {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement &&\n        current.txtElement.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeCssRgb(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeCssRgb(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0] = Util.applyTransform([x0, y0], matrix);\n      const [tx1, ty1] = Util.applyTransform([x1, y1], matrix);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeCssRgb(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        this.extraStack.forEach(function (prev) {\n          prev.clipGroup = null;\n        });\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const {\n        allowRangeRequests,\n        suggestedLength,\n      } = validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: stream.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (/\\.pdf$/i.test(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    \"Unexpected server response (\" +\n      status +\n      ') while retrieving PDF \"' +\n      url +\n      '\".',\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n", "/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const bytes = Array.from(value, function (ch) {\n          return ch.charCodeAt(0) & 0xff;\n        });\n        value = decoder.decode(new Uint8Array(bytes));\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = {\n      xhr,\n    });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  hasPendingRequests() {\n    for (const xhrId in this.pendingRequests) {\n      return true;\n    }\n    return false;\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortAllRequests() {\n    for (const xhrId in this.pendingRequests) {\n      this.abortRequest(xhrId | 0);\n    }\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const {\n      allowRangeRequests,\n      suggestedLength,\n    } = validateRangeRequestCapabilities({\n      getResponseHeader,\n      isHttp: this._manager.isHttp,\n      rangeChunkSize: this._rangeChunkSize,\n      disableRange: this._disableRange,\n    });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: args.chunk, done: false });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = createResponseStatusError(status, url);\n    this._storedError = exception;\n    this._headersReceivedCapability.reject(exception);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.reject(exception);\n    });\n    this._requests = [];\n    this._cachedChunks = [];\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength,\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded,\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController && abortController.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const {\n          allowRangeRequests,\n          suggestedLength,\n        } = validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: this._stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    ).then(response => {\n      if (!validateResponseStatus(response.status)) {\n        throw createResponseStatusError(response.status, url);\n      }\n      this._readCapability.resolve();\n      this._reader = response.body.getReader();\n    });\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n"],
  "mappings": "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",
  "names": ["exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "__w_pdfjs_require__", "module", "exports", "key", "_display_utils", "_util", "_api_compatibility", "_worker_options", "pdfjsVersion", "pdfjsBuild", "require", "PDFNodeStream", "setPDFNetworkStreamFactory", "params", "PDFNetworkStream", "PDFFetchStream", "isValidFetchUrl", "DEFAULT_LINK_REL", "SVG_NS", "create", "width", "height", "canvas", "document", "context", "reset", "canvasAndContext", "destroy", "constructor", "baseUrl", "isCompressed", "url", "compressionType", "CMapCompressionType", "isFetchSupported", "response", "cMapData", "stringToBytes", "reason", "request", "XMLHttpRequest", "resolve", "reject", "assert", "svg", "createElement", "offsetX", "offsetY", "dontFlip", "centerX", "viewBox", "centerY", "rotation", "rotateA", "rotateB", "rotateC", "rotateD", "offsetCanvasX", "Math", "offsetCanvasY", "clone", "scale", "convertToViewportPoint", "convertToViewportRectangle", "topLeft", "rect", "bottomRight", "convertToPdfPoint", "LinkTarget", "NONE", "SELF", "BLANK", "PARENT", "TOP", "enabled", "urlNullRemoved", "removeNullCharacters", "link", "targetStr", "anchor", "query", "end", "Object", "time", "name", "warn", "Date", "timeEnd", "start", "toString", "outBuf", "longest", "duration", "Response", "protocol", "script", "console", "isString", "pdfDateStringRegex", "matches", "year", "parseInt", "month", "day", "hour", "minute", "second", "universalTimeRelation", "offsetHour", "offsetMinute", "IDENTITY_MATRIX", "FONT_IDENTITY_MATRIX", "PermissionFlag", "PRINT", "MODIFY_CONTENTS", "COPY", "MODIFY_ANNOTATIONS", "FILL_INTERACTIVE_FORMS", "COPY_FOR_ACCESSIBILITY", "ASSEMBLE", "PRINT_HIGH_QUALITY", "TextRenderingMode", "FILL", "STROKE", "FILL_STROKE", "INVISIBLE", "FILL_ADD_TO_PATH", "STROKE_ADD_TO_PATH", "FILL_STROKE_ADD_TO_PATH", "ADD_TO_PATH", "FILL_STROKE_MASK", "ADD_TO_PATH_FLAG", "ImageKind", "GRAYSCALE_1BPP", "RGB_24BPP", "RGBA_32BPP", "AnnotationType", "TEXT", "LINK", "FREETEXT", "LINE", "SQUARE", "CIRCLE", "POLYGON", "POLYLINE", "HIGHLIGHT", "UNDERLINE", "SQUIGGLY", "STRIKEOUT", "STAMP", "CARET", "INK", "POPUP", "FILEATTACHMENT", "SOUND", "MOVIE", "WIDGET", "SCREEN", "PRINTERMARK", "TRAPNET", "WATERMARK", "THREED", "REDACT", "AnnotationStateModelType", "MARKED", "REVIEW", "AnnotationMarkedState", "UNMARKED", "AnnotationReviewState", "ACCEPTED", "REJECTED", "CANCELLED", "COMPLETED", "AnnotationReplyType", "GROUP", "REPLY", "AnnotationFlag", "HIDDEN", "NOZOOM", "NOROTATE", "NOVIEW", "READONLY", "LOCKED", "TOGGLENOVIEW", "LOCKEDCONTENTS", "AnnotationFieldFlag", "REQUIRED", "NOEXPORT", "MULTILINE", "PASSWORD", "NOTOGGLETOOFF", "RADIO", "PUSHBUTTON", "COMBO", "EDIT", "SORT", "FILESELECT", "MULTISELECT", "DONOTSPELLCHECK", "DONOTSCROLL", "COMB", "RICHTEXT", "RADIOSINUNISON", "COMMITONSELCHANGE", "AnnotationBorderStyleType", "SOLID", "DASHED", "BEVELED", "INSET", "StreamType", "UNKNOWN", "FLATE", "LZW", "DCT", "JPX", "JBIG", "A85", "AHX", "CCF", "RLX", "FontType", "TYPE1", "TYPE1C", "CIDFONTTYPE0", "CIDFONTTYPE0C", "TRUETYPE", "CIDFONTTYPE2", "TYPE3", "OPENTYPE", "TYPE0", "MMTYPE1", "VerbosityLevel", "ERRORS", "WARNINGS", "INFOS", "BINARY", "STREAM", "OPS", "dependency", "setLineWidth", "setLineCap", "setLineJoin", "setMiterLimit", "setDash", "setRenderingIntent", "setFlatness", "setGState", "save", "restore", "transform", "moveTo", "lineTo", "curveTo", "curveTo2", "curveTo3", "closePath", "rectangle", "stroke", "closeStroke", "fill", "eoFill", "fillStroke", "eoFillStroke", "closeFillStroke", "closeEOFillStroke", "endPath", "clip", "eoClip", "beginText", "endText", "setCharSpacing", "setWordSpacing", "setHScale", "setLeading", "setFont", "setTextRenderingMode", "setTextRise", "moveText", "setLeadingMoveText", "setTextMatrix", "nextLine", "showText", "showSpacedText", "nextLineShowText", "nextLineSetSpacingShowText", "setCharWidth", "setCharWidthAndBounds", "setStrokeColorSpace", "setFillColorSpace", "setStrokeColor", "setStrokeColorN", "setFillColor", "setFillColorN", "setStrokeGray", "setFillGray", "setStrokeRGBColor", "setFillRGBColor", "setStrokeCMYKColor", "setFillCMYKColor", "shadingFill", "beginInlineImage", "beginImageData", "endInlineImage", "paintXObject", "markPoint", "markPointProps", "beginMarkedContent", "beginMarkedContentProps", "endMarkedContent", "beginCompat", "endCompat", "paintFormXObjectBegin", "paintFormXObjectEnd", "beginGroup", "endGroup", "beginAnnotations", "endAnnotations", "beginAnnotation", "endAnnotation", "paintJpegXObject", "paintImageMaskXObject", "paintImageMaskXObjectGroup", "paintImageXObject", "paintInlineImageXObject", "paintInlineImageXObjectGroup", "paintImageXObjectRepeat", "paintImageMaskXObjectRepeat", "paintSolidColorImageMask", "constructPath", "UNSUPPORTED_FEATURES", "unknown", "forms", "javaScript", "smask", "shadingPattern", "font", "errorTilingPattern", "errorExtGState", "errorXObject", "errorFontLoadType3", "errorFontState", "errorFontMissing", "errorFontTranslate", "errorColorSpace", "errorOperatorList", "errorFontToUnicode", "errorFontLoadNative", "errorFontGetPath", "PasswordResponses", "NEED_PASSWORD", "INCORRECT_PASSWORD", "verbosity", "Number", "unreachable", "base", "other", "absoluteUrl", "_isValidProtocol", "enumerable", "configurable", "writable", "BaseException", "NullCharactersRegExp", "str", "bytes", "length", "MAX_ARGUMENT_COUNT", "String", "strBuf", "i", "chunkEnd", "chunk", "arr", "resultLength", "arrayByteLength", "pos", "data", "item", "itemLength", "value", "buffer8", "view32", "IsLittleEndianCached", "shadow", "isLittleEndian", "IsEvalSupportedCached", "isEvalSupported", "rgbBuf", "m1", "m2", "xt", "p", "m", "yt", "d", "p1", "Util", "p2", "r", "p3", "p4", "v", "transpose", "a", "b", "c", "first", "sx", "sy", "orderedX", "rect1", "rect2", "orderedY", "result", "PDFStringTranslateTable", "code", "decodeURIComponent", "escape", "unescape", "encodeURIComponent", "arr1", "arr2", "element", "capability", "isSettled", "get", "createObjectURL", "digits", "forceDataSchema", "URL", "blob", "type", "buffer", "ii", "b1", "b2", "b3", "d1", "d2", "d3", "d4", "_is_node", "isNodeJS", "process", "DEFAULT_RANGE_CHUNK_SIZE", "RENDERING_CANCELLED_TIMEOUT", "createPDFNetworkStream", "task", "source", "isArrayBuffer", "src", "range", "rangeTransport", "worker", "window", "pdfBytes", "isNaN", "apiCompatibilityParams", "setVerbosityLevel", "workerParams", "port", "GlobalWorkerOptions", "PDFWorker", "docId", "workerIdPromise", "_fetchDocument", "networkStreamPromise", "networkStream", "initialData", "progressiveDone", "disableRange", "disableStream", "httpHeaders", "withCredentials", "rangeChunkSize", "messageHandler", "transport", "Promise", "pdfDataRangeTransport", "apiVersion", "password", "disableAutoFetch", "maxImageSize", "disableFontFace", "postMessageTransfers", "docBaseUrl", "ignoreErrors", "fontExtraProperties", "PDFDocumentLoadingTask", "nextDocumentId", "transportDestroyed", "addRangeListener", "addProgressListener", "addProgressiveReadListener", "addProgressiveDoneListener", "onDataRange", "listener", "onDataProgress", "onDataProgressiveRead", "onDataProgressiveDone", "transportReady", "requestDataRange", "abort", "getPage", "getPageIndex", "getDestinations", "getDestination", "getPageLabels", "getPageLayout", "getPageMode", "getViewerPreferences", "getOpenAction", "getOpenActionDestination", "deprecated", "openAction", "getAttachments", "getJavaScript", "getOutline", "getPermissions", "getMetadata", "getData", "getDownloadInfo", "getStats", "cleanup", "pdfBug", "getViewport", "getAnnotations", "intent", "render", "enableWebGL", "renderInteractiveForms", "imageLayer", "canvasFactory", "background", "renderingIntent", "intentState", "clearTimeout", "canvasFactoryInstance", "webGLContext", "enable", "fnArray", "argsArray", "lastChunk", "pageIndex", "complete", "error", "internalRenderTask", "callback", "objs", "commonObjs", "operatorList", "useRequestAnimationFrame", "renderTask", "transparency", "getOperatorList", "opListTask", "streamTextContent", "normalizeWhitespace", "disableCombineTextItems", "TEXT_CONTENT_CHUNK_SIZE", "combineTextItems", "highWaterMark", "size", "textContent", "getTextContent", "readableStream", "reader", "pump", "items", "styles", "_destroy", "waitOn", "force", "renderCompleted", "resetStats", "_tryCleanup", "_startRenderPage", "_renderPageChunk", "operatorListChunk", "_pumpOperatorList", "args", "_abortOperatorList", "defer", "postMessage", "cloned", "transferable", "transfers", "Array", "desc", "cloneValue", "e", "addEventListener", "removeEventListener", "terminate", "pdfWorkerPorts", "isWorkerDisabled", "nextFakeWorkerId", "fallbackWorkerSrc", "pdfjsFilePath", "mainWorkerMessageHandler", "globalThis", "fakeWorkerCapability", "loader", "getMainThreadWorkerMessageHandler", "eval", "getWorkerSrc", "loadScript", "wrapper", "_initializeFromPort", "_initialize", "workerSrc", "isSameOrigin", "createCDNWrapper", "terminateEarly", "onWorkerError", "sendTest", "testObj", "info", "_setupFakeWorker", "setupFakeWorkerGlobal", "WorkerMessageHandler", "id", "workerHandler", "loadingTask", "onUnsupportedFeature", "page", "terminated", "setupMessageHandler", "evt", "loaded", "total", "sink", "headersCapability", "fullReader", "isStreamingSupported", "isRangeSupported", "contentLength", "rangeReader", "pdfInfo", "ex", "exception", "updatePassword", "exportedError", "exportedData", "fontRegistry", "registerFont", "pageProxy", "MAX_IMAGE_SIZE_TO_STORE", "imageData", "fetched", "builtInCMap", "_onUnsupportedFeature", "pageNumber", "promise", "pageInfo", "results", "metadata", "contentDispositionFilename", "startCleanup", "cleanupSuccessful", "_ensureObj", "resolved", "obj", "has", "clear", "cancel", "InternalRenderTask", "canvasInRendering", "initializeGraphics", "operatorListChanged", "_continue", "_scheduleNext", "version", "build", "addNativeFontFace", "insertRule", "styleElement", "styleSheet", "nativeFontFace", "featureId", "rule", "_queueLoadingCallback", "supported", "_prepareFontLoadEvent", "FontLoader", "requests", "nextRequestId", "navigator", "otherRequest", "setTimeout", "done", "getLoadTestFont", "atob", "offset", "chunk1", "s", "chunk2", "ctx", "called", "isFontReady", "loadTestFontId", "COMMENT_OFFSET", "spliceString", "CFF_CHECKSUM_OFFSET", "XXXX_VALUE", "checksum", "int32", "string32", "btoa", "names", "fonts", "div", "span", "translatedData", "createNativeFontFace", "createFontFaceRule", "bytesToString", "getPathGenerator", "cmds", "js", "current", "compatibilityParams", "MIN_FONT_SIZE", "MAX_FONT_SIZE", "MAX_GROUP_SIZE", "MIN_WIDTH_FACTOR", "COMPILE_TYPE3_GLYPHS", "MAX_SIZE_TO_COMPILE", "FULL_CHUNK_HEIGHT", "f", "ad_bc", "bc_ad", "old", "prev", "cosValue", "sinValue", "CachedCanvases", "getCanvas", "canvasEntry", "addContextCurrentTransform", "POINT_TO_PROCESS_LIMIT", "imgData", "width1", "points", "POINT_TYPES", "lineSize", "data0", "mask", "elem", "count", "j", "j0", "sum", "steps", "outlines", "coords", "p0", "step", "pp", "drawOutline", "k", "kk", "o", "l", "ll", "CanvasExtraState", "setCurrentPoint", "CanvasGraphics", "EXECUTION_TIME", "EXECUTION_STEPS", "partialChunkHeight", "fullChunks", "totalChunks", "chunkImgData", "srcPos", "dest", "srcLength", "dest32", "dest32DataLength", "fullSrcDiff", "white", "black", "thisChunkHeight", "destPos", "srcDiff", "kEnd", "kEndUnrolled", "srcByte", "elemsInThisChunk", "properties", "property", "sourceCtx", "destCtx", "alpha", "alpha_", "r0", "g0", "b0", "maskData", "transferMap", "layerData", "y", "hasBackdrop", "backdrop", "subtype", "composeFn", "PIXELS_TO_PROCESS", "chunkSize", "row", "chunkHeight", "maskCtx", "layerCtx", "composeSMaskBackdrop", "composed", "layer", "genericComposeSMask", "LINE_CAP_STYLES", "LINE_JOIN_STYLES", "NORMAL_CLIP", "EO_CLIP", "beginDrawing", "transparentCanvas", "resetCtxToDefault", "viewport", "executeOperatorList", "executionStartIdx", "argsArrayLen", "chunkOperations", "endTime", "stepper", "fnId", "objsPool", "depObjId", "continueCallback", "endDrawing", "states", "state", "beginSMaskGroup", "activeSMask", "drawnWidth", "drawnHeight", "cacheId", "scratchCanvas", "currentCtx", "currentTransform", "groupCtx", "copyCtxState", "suspendSMaskGroup", "composeSMask", "deltaTransform", "resumeSMaskGroup", "endSMaskGroup", "x", "ops", "xw", "yh", "consumePath", "strokeColor", "fillColor", "isPatternFill", "needRestore", "paths", "path", "fontObj", "bold", "italic", "typeface", "browserFontSize", "paintChar", "textRenderingMode", "fontSize", "fillStrokeMode", "isAddToPathSet", "patternFill", "addToPath", "fontSizeScale", "charSpacing", "wordSpacing", "fontDirection", "textHScale", "glyphsLength", "glyphs", "vertical", "spacingDir", "defaultVMetrics", "widthAdvanceScale", "simpleFillText", "pattern", "patternTransform", "lineWidth", "glyph", "isNum", "restoreNeeded", "spacing", "character", "accent", "vmetric", "vx", "vy", "scaledX", "scaledY", "measuredWidth", "characterScaleX", "scaledAccentX", "scaledAccentY", "charWidth", "showType3Text", "fontMatrix", "isTextInvisible", "spacingLength", "transformed", "urx", "ury", "getColorN_Pattern", "IR", "color", "baseTransform", "canvasGraphicsFactory", "createCanvasGraphics", "getShadingPatternFromIR", "inv", "bl", "br", "ul", "ur", "x0", "y0", "x1", "y1", "matrix", "bbox", "group", "bounds", "canvasBounds", "scaleX", "scaleY", "startTransformInverse", "img", "maskCanvas", "putBinaryImageMask", "positions", "images", "image", "objId", "map", "w", "h", "widthScale", "heightScale", "imgToPaint", "tmpCanvas", "tmpCtx", "putBinaryImageData", "paintWidth", "paintHeight", "tmpCanvasId", "newWidth", "newHeight", "position", "left", "top", "entry", "getSinglePixelWidth", "inverse", "getCanvasPosition", "ShadingIRs", "region", "fromIR", "raw", "colorStops", "r1", "getPattern", "applyBoundingBox", "grad", "createMeshCanvas", "colors", "rowSize", "tmp", "c1", "c2", "c3", "x2", "y2", "x3", "y3", "c1r", "c1g", "c1b", "c2r", "c2g", "c2b", "c3r", "c3g", "c3b", "minY", "maxY", "xa", "car", "cag", "cab", "xb", "cbr", "cbg", "cbb", "x1_", "x2_", "ps", "figure", "cs", "verticesPerRow", "rows", "cols", "q", "drawTriangle", "EXPECTED_SCALE", "MAX_PATTERN_SIZE", "BORDER_SIZE", "boundsWidth", "boundsHeight", "combinesScale", "paddedWidth", "paddedHeight", "cachedCanvases", "backgroundColor", "figures", "drawFigure", "owner", "matrixScale", "temporaryPatternCanvas", "shadingIR", "TilingPattern", "PaintType", "COLORED", "UNCOLORED", "createPatternCanvas", "xstep", "ystep", "paintType", "tilingType", "curMatrixScale", "combinedScale", "dimx", "dimy", "graphics", "getSizeAndScale", "maxSize", "clipBbox", "bboxWidth", "bboxHeight", "setFillAndStrokeStyleToContext", "cssColor", "CallbackKind", "DATA", "ERROR", "StreamKind", "CANCEL", "CANCEL_COMPLETE", "CLOSE", "ENQUEUE", "PULL", "PULL_COMPLETE", "START_COMPLETE", "event", "callbackId", "wrapReason", "action", "cbSourceName", "cbTargetName", "comObj", "sourceName", "targetName", "on", "ah", "send", "sendWithPromise", "sendWithStream", "streamId", "controller", "startCapability", "startCall", "pullCall", "cancelCall", "isClosed", "desiredSize", "pull", "pullCapability", "stream", "cancelCapability", "_createStreamSink", "self", "streamSink", "enqueue", "lastDesiredSize", "close", "sinkCapability", "onPull", "onCancel", "isCancelled", "ready", "success", "_processStreamMessage", "_postMessage", "parser", "xmlDocument", "_repair", "chars", "_parse", "rdf", "nodeName", "children", "jj", "getAll", "XMLParserErrorCode", "NoError", "EndOfDocument", "UnterminatedCdat", "UnterminatedXmlDeclaration", "UnterminatedDoctypeDeclaration", "UnterminatedComment", "MalformedElement", "OutOfMemory", "UnterminatedAttributeValue", "UnterminatedElement", "ElementNeverBegun", "ch", "isWhitespace", "_resolveEntities", "entity", "_parseContent", "attributes", "skipWs", "attrName", "attrValue", "attrEndChar", "attrEndIndex", "parsed", "_parseProcessingInstruction", "attrStart", "parseXml", "ch2", "pi", "q2", "complexDoctype", "doctypeContent", "content", "text", "onResolveEntity", "onPi", "onComment", "onCdata", "onDoctype", "onText", "onBeginElement", "onEndElement", "onError", "childNodes", "index", "child", "hasChildNodes", "parseFromString", "isWhitespaceString", "node", "lastElement", "_onReceiveData", "found", "_onProgress", "firstReader", "_onProgressiveDone", "_removeRangeReader", "getFullReader", "queuedChunks", "getRangeReader", "cancelAllRequests", "readers", "_enqueue", "requestCapability", "requestsCapability", "WebGLUtils", "drawFigures", "shader", "gl", "compiled", "errorMsg", "loadShader", "program", "shaders", "linked", "texture", "currentCanvas", "currentGL", "premultipliedalpha", "smaskVertexShaderCode", "smaskFragmentShaderCode", "smaskCache", "generateGL", "vertexShader", "createVertexShader", "fragmentShader", "createFragmentShader", "cache", "texCoordLocation", "texLayerLocation", "texMaskLocation", "texCoordBuffer", "initSmaskGL", "createTexture", "maskTexture", "figuresVertexShaderCode", "figuresFragmentShaderCode", "figuresCache", "initFiguresGL", "coordsMap", "colorsMap", "pIndex", "cIndex", "col", "coordsBuffer", "colorsBuffer", "tryInitGL", "parameters", "fieldType", "isRenderable", "ignoreBorder", "_createContainer", "container", "horizontalRadius", "verticalRadius", "radius", "_createPopup", "trigger", "popupElement", "title", "modificationDate", "contents", "hideWrapper", "popup", "addLinkAttributes", "target", "linkService", "rel", "_bindLink", "_bindNamedAction", "JSON", "TEXT_ALIGNMENT", "fieldWidth", "combWidth", "_setTextStyle", "style", "fontFamily", "fallbackName", "selectElement", "optionElement", "option", "IGNORE_TYPES", "selector", "parentElement", "parentLeft", "parseFloat", "parentWidth", "BACKGROUND_ENLIGHT", "g", "dateObject", "PDFDateString", "date", "_formatContents", "lines", "line", "_toggle", "_show", "pin", "_hide", "unpin", "borderWidth", "square", "circle", "coordinate", "polyline", "getFilenameFromUrl", "stringToPDFString", "_download", "sortedAnnotations", "popupAnnotations", "downloadManager", "imageResourcesPath", "svgFactory", "renderTextLayer", "MAX_TEXT_DIVS_TO_RENDER", "NonWhitespaceRegexp", "textDiv", "textDivProperties", "angle", "canvasWidth", "originalTransform", "paddingBottom", "paddingLeft", "paddingRight", "paddingTop", "isAllWhitespace", "geom", "tx", "fontHeight", "fontAscent", "shouldScaleText", "absScaleX", "absScaleY", "angleCos", "angleSin", "divWidth", "divHeight", "right", "bottom", "textDivs", "textDivsLength", "t", "ts", "expanded", "expandBounds", "divProperties", "boxScale", "findPositiveMin", "box", "x1New", "x2New", "expandBoundsLTR", "boxes", "fakeBoundary", "horizon", "boundary", "maxXNew", "horizonPart", "affectedBoundary", "xNew", "changedHorizon", "lastBoundary", "useBoundary", "used", "textContentItemsStr", "TextLayerRenderTask", "_processItems", "len", "appendText", "_layoutText", "_render", "styleCache", "textItems", "textStyles", "expandTextDivs", "expand", "transformBuf", "paddingBuf", "divProps", "renderParameters", "textContentStream", "enhanceTextSelection", "SVGGraphics", "opTree", "opListElement", "fn", "pf", "SVG_DEFAULTS", "fontStyle", "fontWeight", "XML_NS", "XLINK_NS", "convertImgDataToPng", "PNG_HEADER", "CHUNK_WRAPPER_SIZE", "crcTable", "crc", "body", "crc32", "deflateSyncUncompressed", "input", "Buffer", "output", "__non_webpack_require__", "level", "literals", "maxBlockLength", "deflateBlocks", "idat", "adler", "adler32", "colorType", "bitDepth", "offsetLiterals", "offsetBytes", "kind", "ihdr", "deflateSync", "pngLength", "writePngChunk", "encode", "clipCount", "maskCount", "shadingCount", "loadDependencies", "transformMatrix", "getSVG", "svgElement", "convertOpList", "operatorIdMapping", "opList", "opListToTree", "executeOpTree", "opTreeElement", "lineWidthScale", "textMatrix", "pm", "addFontStyle", "details", "setStrokeAlpha", "setFillAlpha", "_makeColorN_Pattern", "_makeTilingPattern", "tilingId", "txstep", "tystep", "tiling", "tx1", "ty1", "_makeShadingPattern", "shadingId", "point0", "point1", "gradient", "focalPoint", "circlePoint", "focalRadius", "circleRadius", "stop", "colorStop", "op", "clipId", "clipPath", "clipElement", "_setStrokeAttributes", "dashArray", "imgSrc", "cliprect", "imgEl", "definitions", "rootGroup", "_ensureClipGroup", "clipGroup", "_ensureTransformGroup", "fs", "http", "https", "fileUriRegex", "parsedUrl", "parseUrl", "_error", "_setReadableStream", "auth", "host", "method", "handleResponse", "getResponseHeader", "isHttp", "suggestedLength", "extractFilenameFromHeader", "createRequestOptions", "stat", "returnValues", "allowRangeRequests", "contentEncoding", "contentDisposition", "filename", "getFilenameFromContentDispositionHeader", "status", "needsEncodingFixup", "toParamRegExp", "rfc2616unquote", "rfc5987decode", "rfc2047decode", "fixupEncoding", "rfc2231getparam", "decoder", "fatal", "textdecode", "iter", "n", "parts", "part", "quotindex", "encodingend", "extvalue", "encoding", "langvalue", "OK_RESPONSE", "PARTIAL_CONTENT_RESPONSE", "xhr", "array", "requestRange", "listeners", "requestFull", "xhrId", "pendingRequest", "onProgress", "onStateChange", "xhrStatus", "ok_response_on_range_request", "getArrayBuffer", "rangeHeader", "begin", "hasPendingRequests", "getRequestXhr", "isPendingRequest", "abortAllRequests", "abortRequest", "_onRangeRequestReaderClosed", "onHeadersReceived", "onDone", "manager", "_onHeadersReceived", "fullRequestXhrId", "fullRequestXhr", "_onDone", "_onError", "createResponseStatusError", "_close", "signal", "abortController", "mode", "credentials", "redirect", "headers", "createHeaders", "fetch", "createFetchOptions", "validateResponseStatus"]
}
